<?xml version="1.0" encoding="utf-8" ?>
<Project ToolsVersion="12.0"
         DefaultTargets="Build"
         xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <!-- ### Build Configuration ### -->

  <PropertyGroup>
    <SolutionDir Condition="$(SolutionDir) == '' Or $(SolutionDir) == '*Undefined*'">$(MSBuildThisFileDirectory)</SolutionDir>

    <Configuration Condition="'$(Configuration)' == ''">Release</Configuration>
    <!-- WARNING: Projects use "AnyCPU", but solutions use "Any CPU". -->
    <Platform Condition="'$(Platform)' == ''">AnyCPU</Platform>

    <!-- Enable Parallel Build? -->
    <BuildInParallel Condition="'$(BuildInParallel)' == '' And $(MSBuildNodeCount) &gt; 1">true</BuildInParallel>
    <BuildInParallel Condition="'$(BuildInParallel)' == ''">false</BuildInParallel>
  </PropertyGroup>

  <PropertyGroup>
    <SourceDir>$(SolutionDir)src\</SourceDir>
    <BuildDir>$(SolutionDir)_build\</BuildDir>
    <AnalysisOutDir>$(BuildDir)reports\</AnalysisOutDir>
    <!-- RunCodeAnalysis -->
  </PropertyGroup>

  <!-- Attempt to completely isolate our build environment from VS. -->
  <PropertyGroup>
    <!-- FIXME: Narvalo.Core does not go into "_build\bin\Release" -->
    <BuildProperties>
      Platform=$(Platform);
      Configuration=$(Configuration);
      <!--
        According to Microsoft.Common.targets, we must use "OutDir" instead
        of "OutputPath".
      -->
      OutDir=$(BuildDir)bin\$(Configuration)\;
      OutputPath=$(BuildDir)bin\$(Configuration)\;
      BaseIntermediateOutputPath=$(BuildDir)obj\;
      BuildInParallel=$(BuildInParallel);
      BuildFromNarvaloScript=true;
      AnalysisOutDir=$(AnalysisOutDir)
    </BuildProperties>
  </PropertyGroup>

  <ItemGroup>
    <!-- TODO: Add more and more projects. -->
    <ProjectsToBuild Include="$(SourceDir)Narvalo.Core\Narvalo.Core.csproj" />
    <!--
    <ProjectsToBuild Include="$(SourceDir)Narvalo.Common\Narvalo.Common.csproj" />
    <ProjectsToBuild Include="$(SourceDir)Narvalo.Extras\Narvalo.Extras.csproj" />
    <ProjectsToBuild Include="$(SourceDir)Narvalo.Web\Narvalo.Web.csproj" />
    <ProjectsToBuild Include="$(SourceDir)Narvalo.Mvp\Narvalo.Mvp.csproj" />
    <ProjectsToBuild Include="$(SourceDir)Narvalo.Mvp.Web\Narvalo.Mvp.Web.csproj" />
    <ProjectsToBuild Include="$(SourceDir)Narvalo.Mvp.Extras\Narvalo.Mvp.Extras.csproj" />
    -->
  </ItemGroup>

  <!-- ### Core Targets ### -->

  <Target Name="Clean">
    <MSBuild Projects="@(ProjectsToBuild)"
             Properties="$(BuildProperties)"
             BuildInParallel="$(BuildInParallel)"
             Targets="Clean" />

    <RemoveDir Directories="$(BuildDir)" />
  </Target>

  <Target Name="Build">
    <MSBuild Projects="@(ProjectsToBuild)"
             Properties="$(BuildProperties)"
             BuildInParallel="$(BuildInParallel)"
             Targets="Build"
             StopOnFirstFailure="true">
      <Output ItemName="_BuildOutputs" TaskParameter="TargetOutputs" />
    </MSBuild>
  </Target>

  <Target Name="Rebuild" DependsOnTargets="BeforeRebuild;Clean;Build" />

  <Target Name="BeforeRebuild">
    <!--
      StyleCop treats differently the "Build" and "Rebuild" targets.
      We correct this by adding "SourceAnalysisForceFullAnalysis" to the
      Build properties.
    -->
    <PropertyGroup>
      <BuildProperties>
        $(BuildProperties);
        SourceAnalysisForceFullAnalysis=true
      </BuildProperties>
    </PropertyGroup>
  </Target>

  <Target Name="BeforeBuild"
          BeforeTargets="Build"
          DependsOnTargets="CreateAnalysisOutDir" />

  <Target Name="AfterBuild"
          AfterTargets="Build"
          DependsOnTargets="PEVerify;RunXunitTests" />

  <!--
    Création du répertoire contenant les rapports produits
    au cours de la compilation.
  -->
  <Target Name="CreateAnalysisOutDir">
    <MakeDir Directories="$(AnalysisOutDir)" Condition="!Exists($(AnalysisOutDir))" />
  </Target>

  <!-- ### PEVerify ### -->

  <PropertyGroup>
    <PEVerifyTimeFile>$(BuildDir).peverify</PEVerifyTimeFile>
  </PropertyGroup>

  <Target Name="PEVerify"
          Inputs="@(_BuildOutputs)"
          Outputs="$(PEVerifyTimeFile)">
    <Message Text="Verifying assemblies with PEVerify." Importance="Low" />

    <GetFrameworkSdkPath>
      <!-- Path to default version of the .NET SDK. -->
      <!--<Output TaskParameter="Path" PropertyName="_SdkPath" />-->
      <!-- Path to default version of the .NET 4.0 SDK. -->
      <Output TaskParameter="FrameworkSdkVersion40Path" PropertyName="_SdkVersion40Path" />
    </GetFrameworkSdkPath>

    <PropertyGroup>
      <!-- We use a specific version. -->
      <_PEVerifyExe>&quot;$(_SdkVersion40Path)Bin\NETFX 4.5.1 Tools\peverify.exe&quot;</_PEVerifyExe>
    </PropertyGroup>

    <Exec Command="$(_PEVerifyExe) &quot;%(_BuildOutputs.FullPath)&quot; /nologo /md /il /unique"
          ContinueOnError="false" />

    <!-- Garder cette commande en fin de directive au cas où une vérification échoue. -->
    <Touch Files="$(PEVerifyTimeFile)" AlwaysCreate="true" />
  </Target>

  <!-- ### xUnit ### -->

  <ItemGroup>
    <XunitAssemblyFile Include="$(SolutionDir)packages\**\xunit.runner.msbuild.dll" />
  </ItemGroup>

  <UsingTask TaskName="Xunit.Runner.MSBuild.xunit" AssemblyFile="@(XunitAssemblyFile)" />

  <Target Name="RunXunitTests"
          DependsOnTargets="CreateAnalysisOutDir"
          Inputs="@(_BuildOutputs)"
          Outputs="$(XunitXmlReport)">
    <Message Text="Running Xunit tests." Importance="Low" />

    <ItemGroup>
      <_TestAssemblies Include="%(_BuildOutputs.Identity)"
                       Condition="'@(_BuildOutputs->EndsWith('Facts.dll'))' == 'true'" />
    </ItemGroup>

    <xunit Assemblies="@(_TestAssemblies)"
           Xml="$(AnalysisOutDir)xunit.xml"
           Condition="'@(_TestAssemblies)' != ''" />
  </Target>

</Project>
