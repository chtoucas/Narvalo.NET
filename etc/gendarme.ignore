# Gendarme ignore file
# ====================
#
# R: Full name of a rule to be filtered.
# T: Used to filter out a fully qualified type name.
# M: Used to filter out a type member.
# N: Used to filter out a namespace.
# A: Used to filter out an assembly.
#
# The following rules are disabled in the configuration file:
# - Gendarme.Rules.BadPractice.AvoidAssemblyVersionMismatchRule
#   We use semantic versioning but still keep extended version information.
# - Gendarme.Rules.Serialization.MarkEnumerationsAsSerializableRule
#   Fixing this rule could make the code more confusing.
#
# We use the ignore file exclusively for defects that can not be masked
# with a SuppressMessage attribute.
# We also include warnings not yet reviewed or fixed. Beware the intention
# is not to hide the warning but rather to keep a list of things to fix.
# Moreover, we can easily see when new warnings are showing up.
#
# Sample ignore files from the Mono project:
# https://github.com/mono/mono-tools/blob/master/gendarme/mono-options.ignore
# https://github.com/mono/mono-tools/blob/master/gendarme/self-test.ignore
#
# An ignore-file can be generated automatically (using gd2i) from an XML
# defect list produced by Gendarme.

# ==============================================================================
# Global suppressions.
# ==============================================================================

# Narvalo.Core assembly
# ---------------------

R: Gendarme.Rules.Serialization.MissingSerializableAttributeOnISerializableTypeRule
# Justification = [Ignore] Portable Class Libraries do not support the standard serialization mechanism.
A: Narvalo.Core

R: Gendarme.Rules.Serialization.MissingSerializationConstructorRule
# Justification = [Ignore] Portable Class Libraries do not support the standard serialization mechanism.
A: Narvalo.Core

R: Gendarme.Rules.Design.Generic.DoNotExposeNestedGenericSignaturesRule
# Justification = [Intentionally] Exposing nested generics is a price to pay for monads.
N: Narvalo.Fx
N: Narvalo.Fx.Advanced
N: Narvalo.Fx.Linq
N: Narvalo.Fx.Linq.Internal

R: Gendarme.Rules.Naming.UseCorrectCasingRule
# Justification = [Intentionally] Acceptable for namespaces. Narvalo.FX would appear plain ugly to me.
N: Narvalo.Fx
N: Narvalo.Fx.Advanced
N: Narvalo.Fx.Linq
N: Narvalo.Fx.Linq.Internal

R: Gendarme.Rules.Design.AvoidSmallNamespaceRule
# Justification = [Intentionally] Hopefully more will be added.
N: Narvalo.Fx.Linq

# Narvalo.Common assembly
# -----------------------

R: Gendarme.Rules.Design.AvoidSmallNamespaceRule
# Justification = [Intentionally] Hopefully more will be added.
N: Narvalo.Collections
N: Narvalo.Configuration

# ==============================================================================
# Narvalo.Core (Defects to be reviewed or fixed)
# ==============================================================================

# ==============================================================================
# Narvalo.Common (Defects to be reviewed or fixed)
# ==============================================================================

R: Gendarme.Rules.Maintainability.AvoidLackOfCohesionOfMethodsRule
#  ---------------------------------------------------------------
T: Narvalo.Diagnostics.Benchmarking.BenchmarkRunner
T: Narvalo.IO.ConcurrentFileFinder
T: Narvalo.IO.FileFinder

R: Gendarme.Rules.Performance.AvoidUnusedPrivateFieldsRule
#  -------------------------------------------------------
T: Narvalo.Diagnostics.Benchmarking.BenchmarkProcessor
