<?xml version="1.0" encoding="utf-8" ?>
<Project ToolsVersion="12.0" DefaultTargets="Build"
         xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <ItemGroup>
    <!-- FIXME: Should not depend on xunit version -->
    <_XunitAssemblyFile Include="$(MSBuildThisFileDirectory)..\packages\xunit.1.9.2\lib\net20\xunit.runner.msbuild.dll" />
  </ItemGroup>

  <UsingTask TaskName="Xunit.Runner.MSBuild.xunit" AssemblyFile="@(_XunitAssemblyFile)" />

  <!-- ### Build Configuration ### -->

  <PropertyGroup>
    <Configuration Condition="'$(Configuration)' == ''">Release</Configuration>
    <!-- FIXME: For projects we must use "AnyCPU", and for solutions "Any CPU" -->
    <Platform Condition="'$(Platform)' == ''">Any CPU</Platform>

    <!-- REVIEW -->
    <BuildInParallel Condition="'$(BuildInParallel)' == '' And $(MSBuildNodeCount) &gt; 1">true</BuildInParallel>
    <BuildInParallel Condition="'$(BuildInParallel)' == ''">false</BuildInParallel>
  </PropertyGroup>

  <PropertyGroup>
    <_RootDir>$(MSBuildThisFileDirectory)..\</_RootDir>

    <_SourceDir>$(_RootDir)src\</_SourceDir>
    <_EtcDir>$(_RootDir)etc\</_EtcDir>

    <!-- Répertoires temporaires créés au cours de la compilation -->
    <_BuildDir>$(_RootDir)_work\</_BuildDir>
    <_BaseOutDir>$(_BuildDir)bin\</_BaseOutDir>
    <_BaseIntermediateOutDir>$(_BuildDir)obj\</_BaseIntermediateOutDir>
    <_OutDir>$(_BaseOutDir)$(Configuration)\</_OutDir>

    <_ReportsDir>$(_BuildDir)reports\</_ReportsDir>
    <_BuildTimeFile>$(_BuildDir).buildTime</_BuildTimeFile>
    <_XunitXmlReport>$(_ReportsDir)xunit.xml</_XunitXmlReport>
  </PropertyGroup>

  <!--
    On essaie au mieux d'isoler l'environnement de compilation, ie de définir
    des répertoires complètement séparés de ceux utilisés par VS.
  -->
  <PropertyGroup>
    <!-- FIXME: Narvalo.Core does not go into "_work\bin\Release" -->
    <BuildProperties>
      Configuration=$(Configuration);
      OutDir=$(_OutDir);
      <!--
        D'après Microsoft.Common.targets, on doit utiliser "OutDir" plutôt
        qu'"OutputPath". Pour les projets Web, choisir la même valeur pour
        "OutDir" et "OutputPath" permet aussi d'éviter la création
        de "_PublishedWebsites".
      -->
      OutputPath=$(_OutDir);
      BaseIntermediateOutputPath=$(_BaseIntermediateOutDir);
      Platform=$(Platform);
      BuildInParallel=$(BuildInParallel);
      <!-- FIXME: Should not depend on VS version -->
      VisualStudioVersion=12.0;
      NarvaloCustomBuild=true;
      ReportsDir=$(_ReportsDir)
    </BuildProperties>
  </PropertyGroup>

  <!-- Liste des projets -->
  <ItemGroup>
    <!-- TODO: Add more projects/solutions -->
    <ProjectsToBuild Include="$(_RootDir)Narvalo (Core).sln">
      <AdditionalProperties>$(BuildProperties)</AdditionalProperties>
    </ProjectsToBuild>
    <!--
    <ProjectsToBuild Include="$(_SourceDir)Narvalo.Core\Narvalo.Core.csproj">
      <AdditionalProperties>$(BuildProperties)</AdditionalProperties>
    </ProjectsToBuild>
    <ProjectsToBuild Include="$(_SourceDir)Narvalo.Common\Narvalo.Common.csproj">
      <AdditionalProperties>$(BuildProperties)</AdditionalProperties>
    </ProjectsToBuild>
    <ProjectsToBuild Include="$(_SourceDir)Narvalo.Extras\Narvalo.Extras.csproj">
      <AdditionalProperties>$(BuildProperties)</AdditionalProperties>
    </ProjectsToBuild>
    <ProjectsToBuild Include="$(_SourceDir)Narvalo.Web\Narvalo.Web.csproj">
      <AdditionalProperties>$(BuildProperties)</AdditionalProperties>
    </ProjectsToBuild>
    -->
  </ItemGroup>

  <!-- ### Public Targets ### -->

  <Target Name="Clean">
    <MSBuild Projects="@(ProjectsToBuild)" Targets="Clean" />
    <RemoveDir Directories="$(_BuildDir)" />
  </Target>

  <Target Name="Build">
    <MSBuild Projects="@(ProjectsToBuild)"
             Targets="Build"
             StopOnFirstFailure="true">
      <Output ItemName="_BuildOutputs" TaskParameter="TargetOutputs" />
    </MSBuild>
  </Target>

  <!--
    WARNING: Do not use DependsOnTargets="Clean;Build;" as we need to call
    each project target "Rebuild". For instance, the StyleCop target
    overrides "Rebuild" for forcing full analysis but not "Build".
  -->
  <Target Name="Rebuild">
    <MSBuild Projects="@(ProjectsToBuild)"
             Targets="Rebuild"
             StopOnFirstFailure="true">
      <Output ItemName="_BuildOutputs" TaskParameter="TargetOutputs" />
    </MSBuild>
  </Target>

  <Target Name="BeforeBuild"
          BeforeTargets="Build;Rebuild"
          DependsOnTargets="_CreateReportsDir" />

  <Target Name="AfterBuild"
          AfterTargets="Build;Rebuild"
          DependsOnTargets="$(AfterBuildDependsOnTarget)" />

  <ItemGroup>
    <_AfterBuildTargets Include="_PEVerify" />
    <_AfterBuildTargets Include="_RunXunitTests" />
  </ItemGroup>

  <PropertyGroup>
    <AfterBuildDependsOnTarget>@(_AfterBuildTargets)</AfterBuildDependsOnTarget>
  </PropertyGroup>

  <!-- ### Private Targets ### -->

  <!--
    Création du répertoire contenant les rapports produits
    au cours de la compilation.
  -->
  <Target Name="_CreateReportsDir">
    <MakeDir Directories="$(_ReportsDir)" Condition="!Exists($(_ReportsDir))" />
  </Target>

  <Target Name="_PEVerify"
          DependsOnTargets="_GetPEVerify"
          Inputs="@(_BuildOutputs)"
          Outputs="$(_BuildTimeFile)">
    <Message Text="Verifying build outputs with PEVerify." Importance="Low" />

    <Exec Command="$(_PEVerifyExe) &quot;%(_BuildOutputs.FullPath)&quot; /nologo /md /il /unique"
          ContinueOnError="false" />

    <!-- NB: Garder cette commande en fin de directive au cas où une vérification échoue -->
    <Touch Files="$(_BuildTimeFile)" AlwaysCreate="true" />
  </Target>

  <Target Name="_GetPEVerify">
    <GetFrameworkSdkPath>
      <!-- Path to default version of the .NET SDK -->
      <Output TaskParameter="Path" PropertyName="_SdkPath" />
      <!--<Output TaskParameter="FrameworkSdkVersion40Path" PropertyName="_SdkPath" />-->
    </GetFrameworkSdkPath>

    <PropertyGroup>
      <!-- REVIEW: Should not depend on tools version -->
      <_NetFxTools>$(_SdkPath)Bin\NETFX 4.5.1 Tools\</_NetFxTools>
      <_PEVerifyExe>&quot;$(_NetFxTools)peverify.exe&quot;</_PEVerifyExe>
    </PropertyGroup>
  </Target>

  <!-- Xunit Tests -->
  <Target Name="_RunXunitTests"
          DependsOnTargets="_CreateReportsDir"
          Inputs="@(_BuildOutputs)"
          Outputs="$(_XunitXmlReport)">
    <Message Text="Running Xunit tests." Importance="Low" />

    <ItemGroup>
      <_TestAssemblies Include="%(_BuildOutputs.Identity)"
                       Condition="'@(_BuildOutputs->EndsWith('Facts.dll'))' == 'true'" />
    </ItemGroup>

    <xunit Assemblies="@(_TestAssemblies)"
           Xml="$(_XunitXmlReport)"
           Condition="'@(_TestAssemblies)' != ''" />
  </Target>

</Project>
