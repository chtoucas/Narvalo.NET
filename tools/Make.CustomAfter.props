<?xml version="1.0" encoding="utf-8" ?>
<Project ToolsVersion="14.0"
         InitialTargets="__InitialMakeCustomAfterProps"
         TreatAsLocalProperty="BuildGeneratedVersion"
         xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <!-- This file is injected at the end of Narvalo.Common.props by Make.proj. -->

  <!-- Import shared properties. -->
  <Import Project="$(MSBuildThisFileDirectory)Make.Shared.props" />

  <!-- Import custom tasks, if not already done. -->
  <Import Project="$(MSBuildThisFileDirectory)Make.Custom.tasks"
          Condition=" '$(MakeCustomTasksImported)' != 'true' "/>

  <!-- Options -->
  <PropertyGroup>
    <!-- If true, use a dummy version. Default to false. -->
    <DummyGeneratedVersion Condition=" '$(DummyGeneratedVersion)' != 'true' ">false</DummyGeneratedVersion>
    <!-- The DummyGeneratedVersion takes precedence over BuildGeneratedVersion. -->
    <BuildGeneratedVersion Condition=" '$(DummyGeneratedVersion)' == 'true' ">false</BuildGeneratedVersion>

    <!-- If true, skip the generation of the assembly documentation. Default to false. -->
    <SkipDocumentation Condition=" '$(SkipDocumentation)' != 'true' ">false</SkipDocumentation>

    <!-- If true, packages/assemblies are built for retail. Default to false. -->
    <Retail Condition=" '$(Retail)' != 'true' ">false</Retail>
  </PropertyGroup>

  <!-- Assembly documentation. -->
  <PropertyGroup Condition=" '$(SkipDocumentation)' != 'true' ">
    <!-- Always build the assembly documentation. -->
    <DocumentationFile>$(OutputPath)$(AssemblyName).xml</DocumentationFile>
  </PropertyGroup>

  <!-- Code Analysis. -->
  <PropertyGroup>
    <!-- Treat all warnings as errors. -->
    <CodeAnalysisTreatWarningsAsErrors>true</CodeAnalysisTreatWarningsAsErrors>

    <!-- Reports are saved in a custom location. -->
    <CodeAnalysisLogFile>$(WorkLogDir)$(AssemblyName).FxCop.xml</CodeAnalysisLogFile>

    <!-- FIXME: Seems to be ignored by MSBuild. -->
    <!--<CodeAnalysisSucceededFile>$(IntermediateOutputPath)$(AssemblyName).FxCop.out</CodeAnalysisSucceededFile>-->
    <CodeAnalysisGenerateSuccessFile>false</CodeAnalysisGenerateSuccessFile>
  </PropertyGroup>

  <!-- Sign the assembly. -->
  <PropertyGroup Condition=" '$(SignAssembly)' == 'true' ">
    <DefineConstants>$(DefineConstants);SIGNED_ASSEMBLY</DefineConstants>
    <SignAssembly>true</SignAssembly>
    <AssemblyOriginatorKeyFile>$(RepositorySettingsDir)private\Narvalo.snk</AssemblyOriginatorKeyFile>
    <DelaySign>false</DelaySign>
  </PropertyGroup>

  <!-- Hide internals. -->
  <PropertyGroup Condition=" '$(VisibleInternals)' == 'false' ">
    <DefineConstants>$(DefineConstants);NO_INTERNALS_VISIBLE_TO</DefineConstants>
  </PropertyGroup>

  <!-- (Kind of) Semantic versioning. -->
  <PropertyGroup>
    <VersionFile>$(MSBuildProjectDirectory)\$(AssemblyName).Version.props</VersionFile>

    <VersionExists Condition=" Exists('$(VersionFile)') ">true</VersionExists>
    <VersionExists Condition=" '$(VersionExists)' != 'true' ">false</VersionExists>
  </PropertyGroup>

  <!-- If any, import project version related properties. -->
  <Import Project="$(VersionFile)" Condition=" '$(VersionExists)' == 'true' " />

  <PropertyGroup Condition=" '$(VersionExists)' == 'true' ">
    <SemanticVersion>$(MajorVersion).$(MinorVersion).$(PatchVersion)</SemanticVersion>
    <SemanticVersion Condition=" '$(PreReleaseLabel)' != '' ">$(SemanticVersion)-$(PreReleaseLabel)</SemanticVersion>
  </PropertyGroup>

  <!-- Use dummy assembly versions. -->
  <PropertyGroup Condition=" '$(DummyGeneratedVersion)' == 'true' ">
    <DefineConstants>$(DefineConstants);DUMMY_GENERATED_VERSION</DefineConstants>
  </PropertyGroup>

  <!-- Dynamically generate the assembly versions. -->
  <PropertyGroup Condition=" '$(BuildGeneratedVersion)' == 'true' ">
    <DefineConstants>$(DefineConstants);BUILD_GENERATED_VERSION</DefineConstants>

    <!-- WARNING: This property requires IntermediateOutputPath to be initialized
         which is true only because we add this property via Make.proj, otherwise
         it is only available after importing Microsoft.Common.targets. -->
    <AssemblyVersionFile>$(IntermediateOutputPath)$(AssemblyName).Version.cs</AssemblyVersionFile>
  </PropertyGroup>

  <ItemGroup Condition=" '$(BuildGeneratedVersion)' == 'true' ">
    <!-- Dynamically add the assembly version file to the list of sources to compile. -->
    <Compile Include="$(AssemblyVersionFile)" />
  </ItemGroup>

  <!-- NuGet packaging. -->
  <PropertyGroup>
    <PackagesConfig>$(MSBuildProjectDirectory)\packages.config</PackagesConfig>

    <!-- The root directory for NuGet projects. -->
    <NuProjectsRoot>$(RepositoryRoot)src\NuGet\</NuProjectsRoot>

    <NuProjectFile>$(NuProjectsRoot)$(AssemblyName)\$(AssemblyName).nuproj</NuProjectFile>

    <NuProjectExists Condition=" Exists('$(NuProjectFile)') ">true</NuProjectExists>
    <NuProjectExists Condition=" '$(NuProjectExists)' != 'true' ">false</NuProjectExists>

    <NuVersion>$(SemanticVersion)</NuVersion>
    <NuspecFile>$(OutDir)$(AssemblyName).nuspec</NuspecFile>
  </PropertyGroup>

  <!-- Import NuGet project properties. -->
  <Import Project="$(NuProjectFile)" Condition=" '$(NuProjectExists)' == 'true' " />

  <PropertyGroup Condition=" '$(NuProjectExists)' == 'true' ">
    <NuTitle Condition=" $(NuTitle) == '' ">$(NuId)</NuTitle>
    <NuDescription Condition=" '$(NuDescription)' == '' ">$(NuSummary)</NuDescription>
    <NuReleaseNotes Condition=" $(NuReleaseNotes) == '' ">See https://github.com/chtoucas/Narvalo.NET/blob/master/docs/changelogs/index.md</NuReleaseNotes>
    <NuCopyright Condition=" $(NuCopyright) == '' ">Copyright 2013-$([System.DateTime]::Now.Year)</NuCopyright>
  </PropertyGroup>

  <!-- T4 settings. -->
  <PropertyGroup>
    <!-- Force T4 re-generation on build.
         REVIEW: Currently disabled since current T4 templates require VS hosting. -->
    <TransformOnBuild>false</TransformOnBuild>
    <!--<TransformOutOfDateOnly>true</TransformOutOfDateOnly>-->
  </PropertyGroup>

  <!-- __InitialMakeCustomAfterProps target. -->
  <Target Name="__InitialMakeCustomAfterProps"
          DependsOnTargets="
            __SanityChecks;
            __ValidateVersion;
            __ValidateNuProject" />

  <!-- __SanityChecks target. -->
  <Target Name="__SanityChecks">
    <Warning Text="To sign the assembly, you must ask the project owner for the strong name key file."
             Condition=" '$(SignAssembly)' == 'true' And !Exists('$(AssemblyOriginatorKeyFile)') " />

    <Warning Text="You SHOULD NOT create a version file when the project uses dummy assembly versioning."
             Condition=" '$(VersionExists)' == 'true' And '$(DummyGeneratedVersion)' == 'true' " />

    <Error Text="You MUST create a version file when the project is intended to be packaged: $(VersionFile)."
           Condition=" '$(NuProjectExists)' == 'true' And '$(NuVersion)' == '' " />
  </Target>

  <!-- __ValidateVersion target. -->
  <Target Name="__ValidateVersion" Condition=" '$(VersionExists)' == 'true' ">
    <ValidateVersionNumber Value="$(MajorVersion)" Name="MajorVersion" />
    <ValidateVersionNumber Value="$(MinorVersion)" Name="MinorVersion" />
    <ValidateVersionNumber Value="$(PatchVersion)" Name="PatchVersion" />
    <ValidatePrereleaseLabel Value="$(PreReleaseLabel)" Condition=" '$(PreReleaseLabel)' != '' " />

    <!-- If the version is less than 1, there is really no reason to also use a pre-release label. -->
    <Warning Text="Are you sure that you want to use at the same time both a pre-release label ($(PreReleaseLabel)) and a MajorVersion ($(MajorVersion)) less than 1?"
             Condition=" $(MajorVersion) &lt; 1 And '$(PreReleaseLabel)' != '' " />
  </Target>

  <!-- __ValidateNuProject target. -->
  <Target Name="__ValidateNuProject" Condition=" '$(NuProjectExists)' == 'true' ">
    <Error Text="You MUST define the 'NuId' property in the NuGet project: $(NuProjectFile)."
           Condition=" '$(NuId)' == '' " />
    <Error Text="You MUST define at least one property ('NuSummary' or 'NuDescription') in the NuGet project: $(NuProjectFile)."
           Condition=" '$(NuSummary)' == '' And '$(NuDescription)' == '' " />
    <Error Text="You MUST define the 'NuFiles' property in the NuGet project: $(NuProjectFile)."
           Condition=" '$(NuFiles)' == '' " />
  </Target>
</Project>