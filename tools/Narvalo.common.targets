<?xml version="1.0" encoding="utf-8" ?>
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <!--
    Each Visual Studio project should import this file.
    WARNING: Changing some settings from VS will have no effect...
  -->
  <PropertyGroup>
    <!-- $(SolutionDir) is usually set inside Visual Studio. -->
    <SolutionDir Condition="$(SolutionDir) == '' Or $(SolutionDir) == '*Undefined*'">$(MSBuildThisFileDirectory)..\</SolutionDir>

    <!--<OutputPath>bin\$(Configuration)\</OutputPath>-->

    <PlatformTarget>AnyCPU</PlatformTarget>
    <Prefer32Bit>false</Prefer32Bit>
    <AllowUnsafeBlocks>false</AllowUnsafeBlocks>

    <WarningLevel>4</WarningLevel>
    <!-- Disable compile warning for missing documentation. -->
    <NoWarn>1591</NoWarn>
    <TreatWarningsAsErrors>true</TreatWarningsAsErrors>

    <RegisterForComInterop>false</RegisterForComInterop>
    <GenerateSerializationAssemblies>Auto</GenerateSerializationAssemblies>

    <LangVersion>default</LangVersion>
    <ErrorReport>prompt</ErrorReport>

    <SignAssembly>true</SignAssembly>
    <AssemblyOriginatorKeyFile>$(SolutionDir)etc\Narvalo.snk</AssemblyOriginatorKeyFile>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <DefineConstants>TRACE;DEBUG</DefineConstants>
    <CheckForOverflowUnderflow>true</CheckForOverflowUnderflow>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <DefineConstants>TRACE</DefineConstants>
    <CheckForOverflowUnderflow>false</CheckForOverflowUnderflow>
    <DocumentationFile>$(OutputPath)$(AssemblyName).xml</DocumentationFile>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)' == 'CodeContracts'">
    <DebugType>none</DebugType>
    <Optimize>false</Optimize>
    <!-- REVIEW: Keep the DEBUG constant since Contract.Assert and Contract.Assume depend on it. -->
    <DefineConstants>TRACE;DEBUG</DefineConstants>
    <CheckForOverflowUnderflow>false</CheckForOverflowUnderflow>
  </PropertyGroup>


  <!-- ### Source Analysis ### -->

  <PropertyGroup>
    <!-- Only automatically run Source Analysis in Release mode. -->
    <SourceAnalysisEnabled Condition="'$(Configuration)' != 'Release'">false</SourceAnalysisEnabled>
    <SourceAnalysisEnabled Condition="'$(Configuration)' == 'Release'">true</SourceAnalysisEnabled>

    <SourceAnalysisTreatErrorsAsWarnings>false</SourceAnalysisTreatErrorsAsWarnings>
    <SourceAnalysisOverrideSettingsFile>$(SolutionDir)etc\Settings.SourceAnalysis</SourceAnalysisOverrideSettingsFile>
  </PropertyGroup>


  <!-- ### Code Analysis ### -->

  <PropertyGroup>
    <!-- Only automatically run Code Analysis in Release mode. -->
    <RunCodeAnalysis Condition="'$(Configuration)' != 'Release'">false</RunCodeAnalysis>
    <RunCodeAnalysis Condition="'$(Configuration)' == 'Release'">true</RunCodeAnalysis>

    <!-- Process generated files (.g.cs). -->
    <CodeAnalysisIgnoreGeneratedCode>false</CodeAnalysisIgnoreGeneratedCode>

    <!--<CodeAnalysisRuleSet Condition=" '$(Configuration)' == 'Debug' ">$(SolutionDir)etc\Narvalo.ruleset</CodeAnalysisRuleSet>-->
    <!--<CodeAnalysisRuleSet Condition=" '$(Configuration)' == 'Release' ">$(SolutionDir)etc\Narvalo.ruleset</CodeAnalysisRuleSet>-->
    <CodeAnalysisRuleSet Condition="'$(Configuration)' == 'CodeContracts'">MinimumRecommendedRules.ruleset</CodeAnalysisRuleSet>

    <!--- Test projects use a custom ruleset. -->
    <!--<CodeAnalysisRuleSet Condition="'$(AssemblyName)->EndsWith('Facts.dll')' == 'true'">$(SolutionDir)etc\Tests.ruleset</CodeAnalysisRuleSet>-->
  </PropertyGroup>


  <!-- ### Code Contracts ### -->

  <PropertyGroup Condition="'$(Configuration)' == 'CodeContracts'">
    <!-- Assembly Mode: Custom Parameter Validation. -->
    <CodeContractsAssemblyMode>0</CodeContractsAssemblyMode>

    <!-- Runtime Checking. -->
    <CodeContractsEnableRuntimeChecking>True</CodeContractsEnableRuntimeChecking>
    <CodeContractsRuntimeCheckingLevel>Full</CodeContractsRuntimeCheckingLevel>
    <CodeContractsRuntimeOnlyPublicSurface>False</CodeContractsRuntimeOnlyPublicSurface>
    <CodeContractsRuntimeThrowOnFailure>True</CodeContractsRuntimeThrowOnFailure>
    <CodeContractsRuntimeCallSiteRequires>True</CodeContractsRuntimeCallSiteRequires>
    <CodeContractsRuntimeSkipQuantifiers>False</CodeContractsRuntimeSkipQuantifiers>

    <!-- Static Checking. -->
    <CodeContractsRunInBackground>True</CodeContractsRunInBackground>
    <!-- Only useful when using VS but the result is confusing. -->
    <CodeContractsShowSquigglies>False</CodeContractsShowSquigglies>
    <CodeContractsFailBuildOnWarnings>False</CodeContractsFailBuildOnWarnings>

    <!-- Contract Reference Assembly. -->
    <CodeContractsReferenceAssembly>Build</CodeContractsReferenceAssembly>
    <CodeContractsEmitXMLDocs>True</CodeContractsEmitXMLDocs>
    <CodeContractsLibPaths />
    <CodeContractsExtraRewriteOptions />
    <CodeContractsExtraAnalysisOptions />
  </PropertyGroup>


  <!-- ### Continuous Integration ### -->

  <PropertyGroup Condition="'$(BuildingInsideVisualStudio)' != 'true'">
    <!-- Background checking is not available in terminal.-->
    <CodeContractsRunInBackground>False</CodeContractsRunInBackground>
  </PropertyGroup>

  <PropertyGroup Condition="'$(BuildingInsideVisualStudio)' != 'true' And $(AnalysisOutDir) != ''">
    <!-- When called from Narvalo.proj, reports are saved in a custom location. -->
    <SourceAnalysisOutputFile>$(AnalysisOutDir)$(AssemblyName).StyleCop.xml</SourceAnalysisOutputFile>
    <CodeAnalysisLogFile>$(AnalysisOutDir)$(AssemblyName).FxCop.xml</CodeAnalysisLogFile>
  </PropertyGroup>


  <!-- ### Temporary Overrides ### -->

  <PropertyGroup>
    <!-- Code Analysis. -->
    <CodeAnalysisRuleSet Condition="'$(AssemblyName)' == 'MvpWebForms'">MinimumRecommendedRules.ruleset</CodeAnalysisRuleSet>
    <CodeAnalysisRuleSet Condition="'$(AssemblyName)' == 'Narvalo.Build'">MinimumRecommendedRules.ruleset</CodeAnalysisRuleSet>
    <CodeAnalysisRuleSet Condition="'$(AssemblyName)' == 'Narvalo.Ghostscript'">MinimumRecommendedRules.ruleset</CodeAnalysisRuleSet>
    <CodeAnalysisRuleSet Condition="'$(AssemblyName)' == 'Narvalo.Reliability'">MinimumRecommendedRules.ruleset</CodeAnalysisRuleSet>
    <CodeAnalysisRuleSet Condition="'$(AssemblyName)' == 'Narvalo.Mvp.Facts'">MinimumRecommendedRules.ruleset</CodeAnalysisRuleSet>

    <CodeAnalysisRuleSet Condition="'$(AssemblyName)' == 'DocuMaker'">MinimumRecommendedRules.ruleset</CodeAnalysisRuleSet>
    <CodeAnalysisRuleSet Condition="'$(AssemblyName)' == 'Navalo.Junk'">MinimumRecommendedRules.ruleset</CodeAnalysisRuleSet>
    <CodeAnalysisRuleSet Condition="'$(AssemblyName)' == 'Playground'">MinimumRecommendedRules.ruleset</CodeAnalysisRuleSet>

    <!-- Source Analysis. -->
    <SourceAnalysisEnabled Condition="'$(AssemblyName)' == 'MvpWebForms'">false</SourceAnalysisEnabled>
    <SourceAnalysisEnabled Condition="'$(AssemblyName)' == 'Narvalo.Ghostscript'">false</SourceAnalysisEnabled>
    <SourceAnalysisEnabled Condition="'$(AssemblyName)' == 'Narvalo.Reliability'">false</SourceAnalysisEnabled>
    <SourceAnalysisEnabled Condition="'$(AssemblyName)' == 'Narvalo.Mvp.Facts'">false</SourceAnalysisEnabled>
  </PropertyGroup>


  <!-- ### Source Analysis (Core) ### -->

  <!--
    The NuGet package for StyleCop does not include StyleCop.CSharp.Rules.dll.
    There is a StyleCop.MSBuild package which has everything we need but we
    do not add it directly to projects since it does ugly transforms
    on the project file. A simple workaround is to add the StyleCop.MSBuild
    package to the solution and import it included targets below.

    Now all projects depend on a specific version and, when StyleCop.MSBuild
    gets updated, all projects will fail to load. This is far from perfect but
    at least we are immediately notified of the problem.
  -->
  <Import Project="$(SolutionDir)packages\StyleCop.MSBuild.4.7.49.0\build\StyleCop.MSBuild.Targets" />

  <Target Name="BeforeStyleCop"
          BeforeTargets="StyleCop"
          Condition="'$(StyleCopEnabled)' == 'true'">
    <Message Text="Running StyleCop Analysis on $(ProjectName)..." Importance="Low" />
  </Target>

  <Target Name="AfterStyleCop"
          AfterTargets="StyleCop"
          Condition="'$(StyleCopEnabled)' == 'true'">
    <Message Text="StyleCop Analysis Complete for $(ProjectName) -- $(StyleCopViolationCount) violation(s)"
             Importance="High" />
  </Target>
</Project>