// Copyright (c) Narvalo.Org. All rights reserved. See LICENSE.txt in the project root for license information.

//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by a tool. Changes to this file may cause incorrect
// behavior and will be lost if the code is regenerated.
//
// Runtime Version: 4.0.30319.34209
// </auto-generated>
//------------------------------------------------------------------------------

using global::System.Diagnostics.CodeAnalysis;

[module: SuppressMessage("StyleCop.CSharp.MaintainabilityRules", "SA1402:FileMayOnlyContainASingleClass",
    Justification = "[GeneratedCode] A T4 template may contain multiple classes.")]
[module: SuppressMessage("StyleCop.CSharp.LayoutRules", "SA1508:ClosingCurlyBracketsMustNotBePrecededByBlankLine",
    Justification = "[GeneratedCode] Newline rule disabled for T4 templates.")]

namespace Narvalo.Finance.Currencies
{
    using System.Diagnostics.Contracts;

    /// <summary>
    /// Represents the currency unit for the "UAE Dirham".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class AED : Currency
    {
        private static readonly AED s_Currency = new AED();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("AED", 784) {
            EnglishName = @"UAE Dirham",
            MinorUnits = 2
        };

        private AED() : base("AED") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "UAE Dirham".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "UAE Dirham".</value>
        public static AED Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "UAE Dirham".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "UAE Dirham".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Afghani".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class AFN : Currency
    {
        private static readonly AFN s_Currency = new AFN();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("AFN", 971) {
            EnglishName = @"Afghani",
            MinorUnits = 2
        };

        private AFN() : base("AFN") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Afghani".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Afghani".</value>
        public static AFN Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Afghani".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Afghani".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Lek".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class ALL : Currency
    {
        private static readonly ALL s_Currency = new ALL();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("ALL", 8) {
            EnglishName = @"Lek",
            MinorUnits = 2
        };

        private ALL() : base("ALL") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Lek".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Lek".</value>
        public static ALL Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Lek".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Lek".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Armenian Dram".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class AMD : Currency
    {
        private static readonly AMD s_Currency = new AMD();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("AMD", 51) {
            EnglishName = @"Armenian Dram",
            MinorUnits = 2
        };

        private AMD() : base("AMD") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Armenian Dram".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Armenian Dram".</value>
        public static AMD Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Armenian Dram".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Armenian Dram".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Netherlands Antillean Guilder".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class ANG : Currency
    {
        private static readonly ANG s_Currency = new ANG();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("ANG", 532) {
            EnglishName = @"Netherlands Antillean Guilder",
            MinorUnits = 2
        };

        private ANG() : base("ANG") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Netherlands Antillean Guilder".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Netherlands Antillean Guilder".</value>
        public static ANG Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Netherlands Antillean Guilder".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Netherlands Antillean Guilder".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Kwanza".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class AOA : Currency
    {
        private static readonly AOA s_Currency = new AOA();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("AOA", 973) {
            EnglishName = @"Kwanza",
            MinorUnits = 2
        };

        private AOA() : base("AOA") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Kwanza".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Kwanza".</value>
        public static AOA Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Kwanza".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Kwanza".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Argentine Peso".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class ARS : Currency
    {
        private static readonly ARS s_Currency = new ARS();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("ARS", 32) {
            EnglishName = @"Argentine Peso",
            MinorUnits = 2
        };

        private ARS() : base("ARS") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Argentine Peso".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Argentine Peso".</value>
        public static ARS Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Argentine Peso".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Argentine Peso".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Australian Dollar".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class AUD : Currency
    {
        private static readonly AUD s_Currency = new AUD();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("AUD", 36) {
            EnglishName = @"Australian Dollar",
            MinorUnits = 2
        };

        private AUD() : base("AUD") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Australian Dollar".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Australian Dollar".</value>
        public static AUD Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Australian Dollar".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Australian Dollar".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Aruban Florin".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class AWG : Currency
    {
        private static readonly AWG s_Currency = new AWG();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("AWG", 533) {
            EnglishName = @"Aruban Florin",
            MinorUnits = 2
        };

        private AWG() : base("AWG") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Aruban Florin".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Aruban Florin".</value>
        public static AWG Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Aruban Florin".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Aruban Florin".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Azerbaijanian Manat".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class AZN : Currency
    {
        private static readonly AZN s_Currency = new AZN();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("AZN", 944) {
            EnglishName = @"Azerbaijanian Manat",
            MinorUnits = 2
        };

        private AZN() : base("AZN") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Azerbaijanian Manat".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Azerbaijanian Manat".</value>
        public static AZN Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Azerbaijanian Manat".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Azerbaijanian Manat".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Convertible Mark".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class BAM : Currency
    {
        private static readonly BAM s_Currency = new BAM();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("BAM", 977) {
            EnglishName = @"Convertible Mark",
            MinorUnits = 2
        };

        private BAM() : base("BAM") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Convertible Mark".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Convertible Mark".</value>
        public static BAM Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Convertible Mark".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Convertible Mark".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Barbados Dollar".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class BBD : Currency
    {
        private static readonly BBD s_Currency = new BBD();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("BBD", 52) {
            EnglishName = @"Barbados Dollar",
            MinorUnits = 2
        };

        private BBD() : base("BBD") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Barbados Dollar".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Barbados Dollar".</value>
        public static BBD Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Barbados Dollar".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Barbados Dollar".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Taka".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class BDT : Currency
    {
        private static readonly BDT s_Currency = new BDT();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("BDT", 50) {
            EnglishName = @"Taka",
            MinorUnits = 2
        };

        private BDT() : base("BDT") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Taka".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Taka".</value>
        public static BDT Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Taka".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Taka".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Bulgarian Lev".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class BGN : Currency
    {
        private static readonly BGN s_Currency = new BGN();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("BGN", 975) {
            EnglishName = @"Bulgarian Lev",
            MinorUnits = 2
        };

        private BGN() : base("BGN") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Bulgarian Lev".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Bulgarian Lev".</value>
        public static BGN Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Bulgarian Lev".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Bulgarian Lev".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Bahraini Dinar".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class BHD : Currency
    {
        private static readonly BHD s_Currency = new BHD();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("BHD", 48) {
            EnglishName = @"Bahraini Dinar",
            MinorUnits = 3
        };

        private BHD() : base("BHD") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Bahraini Dinar".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Bahraini Dinar".</value>
        public static BHD Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Bahraini Dinar".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Bahraini Dinar".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Burundi Franc".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class BIF : Currency
    {
        private static readonly BIF s_Currency = new BIF();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("BIF", 108) {
            EnglishName = @"Burundi Franc",
            MinorUnits = 0
        };

        private BIF() : base("BIF") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Burundi Franc".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Burundi Franc".</value>
        public static BIF Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Burundi Franc".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Burundi Franc".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Bermudian Dollar".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class BMD : Currency
    {
        private static readonly BMD s_Currency = new BMD();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("BMD", 60) {
            EnglishName = @"Bermudian Dollar",
            MinorUnits = 2
        };

        private BMD() : base("BMD") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Bermudian Dollar".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Bermudian Dollar".</value>
        public static BMD Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Bermudian Dollar".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Bermudian Dollar".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Brunei Dollar".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class BND : Currency
    {
        private static readonly BND s_Currency = new BND();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("BND", 96) {
            EnglishName = @"Brunei Dollar",
            MinorUnits = 2
        };

        private BND() : base("BND") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Brunei Dollar".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Brunei Dollar".</value>
        public static BND Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Brunei Dollar".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Brunei Dollar".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Boliviano".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class BOB : Currency
    {
        private static readonly BOB s_Currency = new BOB();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("BOB", 68) {
            EnglishName = @"Boliviano",
            MinorUnits = 2
        };

        private BOB() : base("BOB") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Boliviano".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Boliviano".</value>
        public static BOB Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Boliviano".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Boliviano".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Mvdol".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class BOV : Currency
    {
        private static readonly BOV s_Currency = new BOV();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("BOV", 984) {
            EnglishName = @"Mvdol",
            IsFund = true,
            MinorUnits = 2
        };

        private BOV() : base("BOV") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Mvdol".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Mvdol".</value>
        public static BOV Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Mvdol".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Mvdol".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Brazilian Real".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class BRL : Currency
    {
        private static readonly BRL s_Currency = new BRL();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("BRL", 986) {
            EnglishName = @"Brazilian Real",
            MinorUnits = 2
        };

        private BRL() : base("BRL") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Brazilian Real".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Brazilian Real".</value>
        public static BRL Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Brazilian Real".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Brazilian Real".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Bahamian Dollar".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class BSD : Currency
    {
        private static readonly BSD s_Currency = new BSD();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("BSD", 44) {
            EnglishName = @"Bahamian Dollar",
            MinorUnits = 2
        };

        private BSD() : base("BSD") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Bahamian Dollar".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Bahamian Dollar".</value>
        public static BSD Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Bahamian Dollar".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Bahamian Dollar".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Ngultrum".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class BTN : Currency
    {
        private static readonly BTN s_Currency = new BTN();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("BTN", 64) {
            EnglishName = @"Ngultrum",
            MinorUnits = 2
        };

        private BTN() : base("BTN") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Ngultrum".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Ngultrum".</value>
        public static BTN Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Ngultrum".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Ngultrum".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Pula".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class BWP : Currency
    {
        private static readonly BWP s_Currency = new BWP();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("BWP", 72) {
            EnglishName = @"Pula",
            MinorUnits = 2
        };

        private BWP() : base("BWP") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Pula".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Pula".</value>
        public static BWP Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Pula".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Pula".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Belarussian Ruble".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class BYR : Currency
    {
        private static readonly BYR s_Currency = new BYR();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("BYR", 974) {
            EnglishName = @"Belarussian Ruble",
            MinorUnits = 0
        };

        private BYR() : base("BYR") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Belarussian Ruble".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Belarussian Ruble".</value>
        public static BYR Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Belarussian Ruble".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Belarussian Ruble".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Belize Dollar".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class BZD : Currency
    {
        private static readonly BZD s_Currency = new BZD();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("BZD", 84) {
            EnglishName = @"Belize Dollar",
            MinorUnits = 2
        };

        private BZD() : base("BZD") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Belize Dollar".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Belize Dollar".</value>
        public static BZD Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Belize Dollar".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Belize Dollar".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Canadian Dollar".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class CAD : Currency
    {
        private static readonly CAD s_Currency = new CAD();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("CAD", 124) {
            EnglishName = @"Canadian Dollar",
            MinorUnits = 2
        };

        private CAD() : base("CAD") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Canadian Dollar".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Canadian Dollar".</value>
        public static CAD Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Canadian Dollar".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Canadian Dollar".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Congolese Franc".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class CDF : Currency
    {
        private static readonly CDF s_Currency = new CDF();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("CDF", 976) {
            EnglishName = @"Congolese Franc",
            MinorUnits = 2
        };

        private CDF() : base("CDF") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Congolese Franc".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Congolese Franc".</value>
        public static CDF Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Congolese Franc".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Congolese Franc".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "WIR Euro".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class CHE : Currency
    {
        private static readonly CHE s_Currency = new CHE();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("CHE", 947) {
            EnglishName = @"WIR Euro",
            IsFund = true,
            MinorUnits = 2
        };

        private CHE() : base("CHE") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "WIR Euro".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "WIR Euro".</value>
        public static CHE Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "WIR Euro".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "WIR Euro".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Swiss Franc".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class CHF : Currency
    {
        private static readonly CHF s_Currency = new CHF();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("CHF", 756) {
            EnglishName = @"Swiss Franc",
            MinorUnits = 2
        };

        private CHF() : base("CHF") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Swiss Franc".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Swiss Franc".</value>
        public static CHF Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Swiss Franc".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Swiss Franc".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "WIR Franc".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class CHW : Currency
    {
        private static readonly CHW s_Currency = new CHW();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("CHW", 948) {
            EnglishName = @"WIR Franc",
            IsFund = true,
            MinorUnits = 2
        };

        private CHW() : base("CHW") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "WIR Franc".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "WIR Franc".</value>
        public static CHW Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "WIR Franc".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "WIR Franc".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Unidad de Fomento".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class CLF : Currency
    {
        private static readonly CLF s_Currency = new CLF();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("CLF", 990) {
            EnglishName = @"Unidad de Fomento",
            IsFund = true,
            MinorUnits = 4
        };

        private CLF() : base("CLF") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Unidad de Fomento".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Unidad de Fomento".</value>
        public static CLF Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Unidad de Fomento".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Unidad de Fomento".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Chilean Peso".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class CLP : Currency
    {
        private static readonly CLP s_Currency = new CLP();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("CLP", 152) {
            EnglishName = @"Chilean Peso",
            MinorUnits = 0
        };

        private CLP() : base("CLP") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Chilean Peso".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Chilean Peso".</value>
        public static CLP Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Chilean Peso".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Chilean Peso".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Yuan Renminbi".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class CNY : Currency
    {
        private static readonly CNY s_Currency = new CNY();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("CNY", 156) {
            EnglishName = @"Yuan Renminbi",
            MinorUnits = 2
        };

        private CNY() : base("CNY") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Yuan Renminbi".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Yuan Renminbi".</value>
        public static CNY Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Yuan Renminbi".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Yuan Renminbi".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Colombian Peso".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class COP : Currency
    {
        private static readonly COP s_Currency = new COP();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("COP", 170) {
            EnglishName = @"Colombian Peso",
            MinorUnits = 2
        };

        private COP() : base("COP") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Colombian Peso".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Colombian Peso".</value>
        public static COP Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Colombian Peso".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Colombian Peso".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Unidad de Valor Real".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class COU : Currency
    {
        private static readonly COU s_Currency = new COU();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("COU", 970) {
            EnglishName = @"Unidad de Valor Real",
            IsFund = true,
            MinorUnits = 2
        };

        private COU() : base("COU") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Unidad de Valor Real".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Unidad de Valor Real".</value>
        public static COU Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Unidad de Valor Real".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Unidad de Valor Real".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Costa Rican Colon".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class CRC : Currency
    {
        private static readonly CRC s_Currency = new CRC();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("CRC", 188) {
            EnglishName = @"Costa Rican Colon",
            MinorUnits = 2
        };

        private CRC() : base("CRC") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Costa Rican Colon".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Costa Rican Colon".</value>
        public static CRC Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Costa Rican Colon".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Costa Rican Colon".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Peso Convertible".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class CUC : Currency
    {
        private static readonly CUC s_Currency = new CUC();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("CUC", 931) {
            EnglishName = @"Peso Convertible",
            MinorUnits = 2
        };

        private CUC() : base("CUC") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Peso Convertible".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Peso Convertible".</value>
        public static CUC Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Peso Convertible".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Peso Convertible".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Cuban Peso".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class CUP : Currency
    {
        private static readonly CUP s_Currency = new CUP();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("CUP", 192) {
            EnglishName = @"Cuban Peso",
            MinorUnits = 2
        };

        private CUP() : base("CUP") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Cuban Peso".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Cuban Peso".</value>
        public static CUP Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Cuban Peso".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Cuban Peso".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Cabo Verde Escudo".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class CVE : Currency
    {
        private static readonly CVE s_Currency = new CVE();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("CVE", 132) {
            EnglishName = @"Cabo Verde Escudo",
            MinorUnits = 2
        };

        private CVE() : base("CVE") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Cabo Verde Escudo".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Cabo Verde Escudo".</value>
        public static CVE Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Cabo Verde Escudo".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Cabo Verde Escudo".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Czech Koruna".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class CZK : Currency
    {
        private static readonly CZK s_Currency = new CZK();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("CZK", 203) {
            EnglishName = @"Czech Koruna",
            MinorUnits = 2
        };

        private CZK() : base("CZK") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Czech Koruna".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Czech Koruna".</value>
        public static CZK Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Czech Koruna".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Czech Koruna".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Djibouti Franc".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class DJF : Currency
    {
        private static readonly DJF s_Currency = new DJF();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("DJF", 262) {
            EnglishName = @"Djibouti Franc",
            MinorUnits = 0
        };

        private DJF() : base("DJF") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Djibouti Franc".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Djibouti Franc".</value>
        public static DJF Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Djibouti Franc".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Djibouti Franc".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Danish Krone".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class DKK : Currency
    {
        private static readonly DKK s_Currency = new DKK();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("DKK", 208) {
            EnglishName = @"Danish Krone",
            MinorUnits = 2
        };

        private DKK() : base("DKK") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Danish Krone".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Danish Krone".</value>
        public static DKK Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Danish Krone".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Danish Krone".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Dominican Peso".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class DOP : Currency
    {
        private static readonly DOP s_Currency = new DOP();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("DOP", 214) {
            EnglishName = @"Dominican Peso",
            MinorUnits = 2
        };

        private DOP() : base("DOP") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Dominican Peso".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Dominican Peso".</value>
        public static DOP Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Dominican Peso".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Dominican Peso".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Algerian Dinar".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class DZD : Currency
    {
        private static readonly DZD s_Currency = new DZD();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("DZD", 12) {
            EnglishName = @"Algerian Dinar",
            MinorUnits = 2
        };

        private DZD() : base("DZD") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Algerian Dinar".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Algerian Dinar".</value>
        public static DZD Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Algerian Dinar".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Algerian Dinar".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Egyptian Pound".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class EGP : Currency
    {
        private static readonly EGP s_Currency = new EGP();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("EGP", 818) {
            EnglishName = @"Egyptian Pound",
            MinorUnits = 2
        };

        private EGP() : base("EGP") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Egyptian Pound".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Egyptian Pound".</value>
        public static EGP Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Egyptian Pound".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Egyptian Pound".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Nakfa".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class ERN : Currency
    {
        private static readonly ERN s_Currency = new ERN();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("ERN", 232) {
            EnglishName = @"Nakfa",
            MinorUnits = 2
        };

        private ERN() : base("ERN") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Nakfa".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Nakfa".</value>
        public static ERN Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Nakfa".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Nakfa".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Ethiopian Birr".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class ETB : Currency
    {
        private static readonly ETB s_Currency = new ETB();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("ETB", 230) {
            EnglishName = @"Ethiopian Birr",
            MinorUnits = 2
        };

        private ETB() : base("ETB") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Ethiopian Birr".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Ethiopian Birr".</value>
        public static ETB Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Ethiopian Birr".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Ethiopian Birr".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Euro".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class EUR : Currency
    {
        private static readonly EUR s_Currency = new EUR();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("EUR", 978) {
            EnglishName = @"Euro",
            MinorUnits = 2
        };

        private EUR() : base("EUR") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Euro".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Euro".</value>
        public static EUR Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Euro".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Euro".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Fiji Dollar".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class FJD : Currency
    {
        private static readonly FJD s_Currency = new FJD();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("FJD", 242) {
            EnglishName = @"Fiji Dollar",
            MinorUnits = 2
        };

        private FJD() : base("FJD") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Fiji Dollar".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Fiji Dollar".</value>
        public static FJD Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Fiji Dollar".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Fiji Dollar".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Falkland Islands Pound".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class FKP : Currency
    {
        private static readonly FKP s_Currency = new FKP();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("FKP", 238) {
            EnglishName = @"Falkland Islands Pound",
            MinorUnits = 2
        };

        private FKP() : base("FKP") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Falkland Islands Pound".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Falkland Islands Pound".</value>
        public static FKP Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Falkland Islands Pound".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Falkland Islands Pound".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Pound Sterling".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class GBP : Currency
    {
        private static readonly GBP s_Currency = new GBP();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("GBP", 826) {
            EnglishName = @"Pound Sterling",
            MinorUnits = 2
        };

        private GBP() : base("GBP") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Pound Sterling".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Pound Sterling".</value>
        public static GBP Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Pound Sterling".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Pound Sterling".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Lari".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class GEL : Currency
    {
        private static readonly GEL s_Currency = new GEL();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("GEL", 981) {
            EnglishName = @"Lari",
            MinorUnits = 2
        };

        private GEL() : base("GEL") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Lari".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Lari".</value>
        public static GEL Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Lari".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Lari".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Ghana Cedi".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class GHS : Currency
    {
        private static readonly GHS s_Currency = new GHS();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("GHS", 936) {
            EnglishName = @"Ghana Cedi",
            MinorUnits = 2
        };

        private GHS() : base("GHS") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Ghana Cedi".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Ghana Cedi".</value>
        public static GHS Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Ghana Cedi".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Ghana Cedi".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Gibraltar Pound".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class GIP : Currency
    {
        private static readonly GIP s_Currency = new GIP();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("GIP", 292) {
            EnglishName = @"Gibraltar Pound",
            MinorUnits = 2
        };

        private GIP() : base("GIP") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Gibraltar Pound".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Gibraltar Pound".</value>
        public static GIP Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Gibraltar Pound".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Gibraltar Pound".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Dalasi".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class GMD : Currency
    {
        private static readonly GMD s_Currency = new GMD();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("GMD", 270) {
            EnglishName = @"Dalasi",
            MinorUnits = 2
        };

        private GMD() : base("GMD") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Dalasi".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Dalasi".</value>
        public static GMD Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Dalasi".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Dalasi".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Guinea Franc".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class GNF : Currency
    {
        private static readonly GNF s_Currency = new GNF();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("GNF", 324) {
            EnglishName = @"Guinea Franc",
            MinorUnits = 0
        };

        private GNF() : base("GNF") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Guinea Franc".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Guinea Franc".</value>
        public static GNF Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Guinea Franc".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Guinea Franc".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Quetzal".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class GTQ : Currency
    {
        private static readonly GTQ s_Currency = new GTQ();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("GTQ", 320) {
            EnglishName = @"Quetzal",
            MinorUnits = 2
        };

        private GTQ() : base("GTQ") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Quetzal".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Quetzal".</value>
        public static GTQ Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Quetzal".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Quetzal".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Guyana Dollar".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class GYD : Currency
    {
        private static readonly GYD s_Currency = new GYD();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("GYD", 328) {
            EnglishName = @"Guyana Dollar",
            MinorUnits = 2
        };

        private GYD() : base("GYD") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Guyana Dollar".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Guyana Dollar".</value>
        public static GYD Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Guyana Dollar".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Guyana Dollar".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Hong Kong Dollar".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class HKD : Currency
    {
        private static readonly HKD s_Currency = new HKD();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("HKD", 344) {
            EnglishName = @"Hong Kong Dollar",
            MinorUnits = 2
        };

        private HKD() : base("HKD") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Hong Kong Dollar".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Hong Kong Dollar".</value>
        public static HKD Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Hong Kong Dollar".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Hong Kong Dollar".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Lempira".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class HNL : Currency
    {
        private static readonly HNL s_Currency = new HNL();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("HNL", 340) {
            EnglishName = @"Lempira",
            MinorUnits = 2
        };

        private HNL() : base("HNL") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Lempira".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Lempira".</value>
        public static HNL Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Lempira".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Lempira".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Croatian Kuna".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class HRK : Currency
    {
        private static readonly HRK s_Currency = new HRK();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("HRK", 191) {
            EnglishName = @"Croatian Kuna",
            MinorUnits = 2
        };

        private HRK() : base("HRK") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Croatian Kuna".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Croatian Kuna".</value>
        public static HRK Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Croatian Kuna".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Croatian Kuna".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Gourde".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class HTG : Currency
    {
        private static readonly HTG s_Currency = new HTG();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("HTG", 332) {
            EnglishName = @"Gourde",
            MinorUnits = 2
        };

        private HTG() : base("HTG") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Gourde".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Gourde".</value>
        public static HTG Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Gourde".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Gourde".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Forint".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class HUF : Currency
    {
        private static readonly HUF s_Currency = new HUF();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("HUF", 348) {
            EnglishName = @"Forint",
            MinorUnits = 2
        };

        private HUF() : base("HUF") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Forint".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Forint".</value>
        public static HUF Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Forint".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Forint".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Rupiah".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class IDR : Currency
    {
        private static readonly IDR s_Currency = new IDR();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("IDR", 360) {
            EnglishName = @"Rupiah",
            MinorUnits = 2
        };

        private IDR() : base("IDR") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Rupiah".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Rupiah".</value>
        public static IDR Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Rupiah".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Rupiah".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "New Israeli Sheqel".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class ILS : Currency
    {
        private static readonly ILS s_Currency = new ILS();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("ILS", 376) {
            EnglishName = @"New Israeli Sheqel",
            MinorUnits = 2
        };

        private ILS() : base("ILS") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "New Israeli Sheqel".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "New Israeli Sheqel".</value>
        public static ILS Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "New Israeli Sheqel".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "New Israeli Sheqel".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Indian Rupee".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class INR : Currency
    {
        private static readonly INR s_Currency = new INR();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("INR", 356) {
            EnglishName = @"Indian Rupee",
            MinorUnits = 2
        };

        private INR() : base("INR") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Indian Rupee".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Indian Rupee".</value>
        public static INR Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Indian Rupee".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Indian Rupee".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Iraqi Dinar".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class IQD : Currency
    {
        private static readonly IQD s_Currency = new IQD();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("IQD", 368) {
            EnglishName = @"Iraqi Dinar",
            MinorUnits = 3
        };

        private IQD() : base("IQD") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Iraqi Dinar".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Iraqi Dinar".</value>
        public static IQD Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Iraqi Dinar".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Iraqi Dinar".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Iranian Rial".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class IRR : Currency
    {
        private static readonly IRR s_Currency = new IRR();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("IRR", 364) {
            EnglishName = @"Iranian Rial",
            MinorUnits = 2
        };

        private IRR() : base("IRR") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Iranian Rial".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Iranian Rial".</value>
        public static IRR Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Iranian Rial".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Iranian Rial".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Iceland Krona".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class ISK : Currency
    {
        private static readonly ISK s_Currency = new ISK();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("ISK", 352) {
            EnglishName = @"Iceland Krona",
            MinorUnits = 0
        };

        private ISK() : base("ISK") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Iceland Krona".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Iceland Krona".</value>
        public static ISK Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Iceland Krona".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Iceland Krona".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Jamaican Dollar".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class JMD : Currency
    {
        private static readonly JMD s_Currency = new JMD();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("JMD", 388) {
            EnglishName = @"Jamaican Dollar",
            MinorUnits = 2
        };

        private JMD() : base("JMD") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Jamaican Dollar".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Jamaican Dollar".</value>
        public static JMD Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Jamaican Dollar".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Jamaican Dollar".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Jordanian Dinar".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class JOD : Currency
    {
        private static readonly JOD s_Currency = new JOD();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("JOD", 400) {
            EnglishName = @"Jordanian Dinar",
            MinorUnits = 3
        };

        private JOD() : base("JOD") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Jordanian Dinar".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Jordanian Dinar".</value>
        public static JOD Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Jordanian Dinar".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Jordanian Dinar".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Yen".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class JPY : Currency
    {
        private static readonly JPY s_Currency = new JPY();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("JPY", 392) {
            EnglishName = @"Yen",
            MinorUnits = 0
        };

        private JPY() : base("JPY") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Yen".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Yen".</value>
        public static JPY Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Yen".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Yen".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Kenyan Shilling".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class KES : Currency
    {
        private static readonly KES s_Currency = new KES();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("KES", 404) {
            EnglishName = @"Kenyan Shilling",
            MinorUnits = 2
        };

        private KES() : base("KES") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Kenyan Shilling".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Kenyan Shilling".</value>
        public static KES Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Kenyan Shilling".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Kenyan Shilling".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Som".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class KGS : Currency
    {
        private static readonly KGS s_Currency = new KGS();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("KGS", 417) {
            EnglishName = @"Som",
            MinorUnits = 2
        };

        private KGS() : base("KGS") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Som".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Som".</value>
        public static KGS Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Som".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Som".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Riel".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class KHR : Currency
    {
        private static readonly KHR s_Currency = new KHR();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("KHR", 116) {
            EnglishName = @"Riel",
            MinorUnits = 2
        };

        private KHR() : base("KHR") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Riel".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Riel".</value>
        public static KHR Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Riel".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Riel".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Comoro Franc".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class KMF : Currency
    {
        private static readonly KMF s_Currency = new KMF();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("KMF", 174) {
            EnglishName = @"Comoro Franc",
            MinorUnits = 0
        };

        private KMF() : base("KMF") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Comoro Franc".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Comoro Franc".</value>
        public static KMF Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Comoro Franc".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Comoro Franc".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "North Korean Won".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class KPW : Currency
    {
        private static readonly KPW s_Currency = new KPW();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("KPW", 408) {
            EnglishName = @"North Korean Won",
            MinorUnits = 2
        };

        private KPW() : base("KPW") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "North Korean Won".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "North Korean Won".</value>
        public static KPW Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "North Korean Won".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "North Korean Won".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Won".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class KRW : Currency
    {
        private static readonly KRW s_Currency = new KRW();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("KRW", 410) {
            EnglishName = @"Won",
            MinorUnits = 0
        };

        private KRW() : base("KRW") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Won".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Won".</value>
        public static KRW Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Won".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Won".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Kuwaiti Dinar".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class KWD : Currency
    {
        private static readonly KWD s_Currency = new KWD();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("KWD", 414) {
            EnglishName = @"Kuwaiti Dinar",
            MinorUnits = 3
        };

        private KWD() : base("KWD") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Kuwaiti Dinar".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Kuwaiti Dinar".</value>
        public static KWD Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Kuwaiti Dinar".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Kuwaiti Dinar".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Cayman Islands Dollar".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class KYD : Currency
    {
        private static readonly KYD s_Currency = new KYD();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("KYD", 136) {
            EnglishName = @"Cayman Islands Dollar",
            MinorUnits = 2
        };

        private KYD() : base("KYD") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Cayman Islands Dollar".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Cayman Islands Dollar".</value>
        public static KYD Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Cayman Islands Dollar".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Cayman Islands Dollar".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Tenge".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class KZT : Currency
    {
        private static readonly KZT s_Currency = new KZT();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("KZT", 398) {
            EnglishName = @"Tenge",
            MinorUnits = 2
        };

        private KZT() : base("KZT") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Tenge".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Tenge".</value>
        public static KZT Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Tenge".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Tenge".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Kip".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class LAK : Currency
    {
        private static readonly LAK s_Currency = new LAK();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("LAK", 418) {
            EnglishName = @"Kip",
            MinorUnits = 2
        };

        private LAK() : base("LAK") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Kip".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Kip".</value>
        public static LAK Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Kip".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Kip".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Lebanese Pound".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class LBP : Currency
    {
        private static readonly LBP s_Currency = new LBP();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("LBP", 422) {
            EnglishName = @"Lebanese Pound",
            MinorUnits = 2
        };

        private LBP() : base("LBP") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Lebanese Pound".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Lebanese Pound".</value>
        public static LBP Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Lebanese Pound".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Lebanese Pound".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Sri Lanka Rupee".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class LKR : Currency
    {
        private static readonly LKR s_Currency = new LKR();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("LKR", 144) {
            EnglishName = @"Sri Lanka Rupee",
            MinorUnits = 2
        };

        private LKR() : base("LKR") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Sri Lanka Rupee".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Sri Lanka Rupee".</value>
        public static LKR Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Sri Lanka Rupee".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Sri Lanka Rupee".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Liberian Dollar".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class LRD : Currency
    {
        private static readonly LRD s_Currency = new LRD();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("LRD", 430) {
            EnglishName = @"Liberian Dollar",
            MinorUnits = 2
        };

        private LRD() : base("LRD") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Liberian Dollar".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Liberian Dollar".</value>
        public static LRD Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Liberian Dollar".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Liberian Dollar".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Loti".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class LSL : Currency
    {
        private static readonly LSL s_Currency = new LSL();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("LSL", 426) {
            EnglishName = @"Loti",
            MinorUnits = 2
        };

        private LSL() : base("LSL") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Loti".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Loti".</value>
        public static LSL Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Loti".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Loti".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Libyan Dinar".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class LYD : Currency
    {
        private static readonly LYD s_Currency = new LYD();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("LYD", 434) {
            EnglishName = @"Libyan Dinar",
            MinorUnits = 3
        };

        private LYD() : base("LYD") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Libyan Dinar".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Libyan Dinar".</value>
        public static LYD Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Libyan Dinar".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Libyan Dinar".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Moroccan Dirham".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class MAD : Currency
    {
        private static readonly MAD s_Currency = new MAD();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("MAD", 504) {
            EnglishName = @"Moroccan Dirham",
            MinorUnits = 2
        };

        private MAD() : base("MAD") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Moroccan Dirham".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Moroccan Dirham".</value>
        public static MAD Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Moroccan Dirham".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Moroccan Dirham".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Moldovan Leu".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class MDL : Currency
    {
        private static readonly MDL s_Currency = new MDL();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("MDL", 498) {
            EnglishName = @"Moldovan Leu",
            MinorUnits = 2
        };

        private MDL() : base("MDL") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Moldovan Leu".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Moldovan Leu".</value>
        public static MDL Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Moldovan Leu".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Moldovan Leu".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Malagasy Ariary".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class MGA : Currency
    {
        private static readonly MGA s_Currency = new MGA();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("MGA", 969) {
            EnglishName = @"Malagasy Ariary",
            MinorUnits = 2
        };

        private MGA() : base("MGA") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Malagasy Ariary".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Malagasy Ariary".</value>
        public static MGA Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Malagasy Ariary".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Malagasy Ariary".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Denar".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class MKD : Currency
    {
        private static readonly MKD s_Currency = new MKD();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("MKD", 807) {
            EnglishName = @"Denar",
            MinorUnits = 2
        };

        private MKD() : base("MKD") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Denar".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Denar".</value>
        public static MKD Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Denar".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Denar".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Kyat".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class MMK : Currency
    {
        private static readonly MMK s_Currency = new MMK();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("MMK", 104) {
            EnglishName = @"Kyat",
            MinorUnits = 2
        };

        private MMK() : base("MMK") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Kyat".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Kyat".</value>
        public static MMK Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Kyat".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Kyat".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Tugrik".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class MNT : Currency
    {
        private static readonly MNT s_Currency = new MNT();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("MNT", 496) {
            EnglishName = @"Tugrik",
            MinorUnits = 2
        };

        private MNT() : base("MNT") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Tugrik".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Tugrik".</value>
        public static MNT Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Tugrik".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Tugrik".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Pataca".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class MOP : Currency
    {
        private static readonly MOP s_Currency = new MOP();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("MOP", 446) {
            EnglishName = @"Pataca",
            MinorUnits = 2
        };

        private MOP() : base("MOP") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Pataca".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Pataca".</value>
        public static MOP Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Pataca".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Pataca".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Ouguiya".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class MRO : Currency
    {
        private static readonly MRO s_Currency = new MRO();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("MRO", 478) {
            EnglishName = @"Ouguiya",
            MinorUnits = 2
        };

        private MRO() : base("MRO") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Ouguiya".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Ouguiya".</value>
        public static MRO Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Ouguiya".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Ouguiya".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Mauritius Rupee".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class MUR : Currency
    {
        private static readonly MUR s_Currency = new MUR();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("MUR", 480) {
            EnglishName = @"Mauritius Rupee",
            MinorUnits = 2
        };

        private MUR() : base("MUR") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Mauritius Rupee".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Mauritius Rupee".</value>
        public static MUR Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Mauritius Rupee".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Mauritius Rupee".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Rufiyaa".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class MVR : Currency
    {
        private static readonly MVR s_Currency = new MVR();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("MVR", 462) {
            EnglishName = @"Rufiyaa",
            MinorUnits = 2
        };

        private MVR() : base("MVR") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Rufiyaa".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Rufiyaa".</value>
        public static MVR Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Rufiyaa".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Rufiyaa".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Kwacha".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class MWK : Currency
    {
        private static readonly MWK s_Currency = new MWK();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("MWK", 454) {
            EnglishName = @"Kwacha",
            MinorUnits = 2
        };

        private MWK() : base("MWK") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Kwacha".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Kwacha".</value>
        public static MWK Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Kwacha".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Kwacha".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Mexican Peso".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class MXN : Currency
    {
        private static readonly MXN s_Currency = new MXN();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("MXN", 484) {
            EnglishName = @"Mexican Peso",
            MinorUnits = 2
        };

        private MXN() : base("MXN") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Mexican Peso".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Mexican Peso".</value>
        public static MXN Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Mexican Peso".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Mexican Peso".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Mexican Unidad de Inversion (UDI)".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class MXV : Currency
    {
        private static readonly MXV s_Currency = new MXV();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("MXV", 979) {
            EnglishName = @"Mexican Unidad de Inversion (UDI)",
            IsFund = true,
            MinorUnits = 2
        };

        private MXV() : base("MXV") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Mexican Unidad de Inversion (UDI)".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Mexican Unidad de Inversion (UDI)".</value>
        public static MXV Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Mexican Unidad de Inversion (UDI)".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Mexican Unidad de Inversion (UDI)".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Malaysian Ringgit".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class MYR : Currency
    {
        private static readonly MYR s_Currency = new MYR();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("MYR", 458) {
            EnglishName = @"Malaysian Ringgit",
            MinorUnits = 2
        };

        private MYR() : base("MYR") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Malaysian Ringgit".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Malaysian Ringgit".</value>
        public static MYR Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Malaysian Ringgit".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Malaysian Ringgit".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Mozambique Metical".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class MZN : Currency
    {
        private static readonly MZN s_Currency = new MZN();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("MZN", 943) {
            EnglishName = @"Mozambique Metical",
            MinorUnits = 2
        };

        private MZN() : base("MZN") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Mozambique Metical".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Mozambique Metical".</value>
        public static MZN Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Mozambique Metical".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Mozambique Metical".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Namibia Dollar".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class NAD : Currency
    {
        private static readonly NAD s_Currency = new NAD();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("NAD", 516) {
            EnglishName = @"Namibia Dollar",
            MinorUnits = 2
        };

        private NAD() : base("NAD") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Namibia Dollar".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Namibia Dollar".</value>
        public static NAD Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Namibia Dollar".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Namibia Dollar".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Naira".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class NGN : Currency
    {
        private static readonly NGN s_Currency = new NGN();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("NGN", 566) {
            EnglishName = @"Naira",
            MinorUnits = 2
        };

        private NGN() : base("NGN") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Naira".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Naira".</value>
        public static NGN Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Naira".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Naira".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Cordoba Oro".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class NIO : Currency
    {
        private static readonly NIO s_Currency = new NIO();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("NIO", 558) {
            EnglishName = @"Cordoba Oro",
            MinorUnits = 2
        };

        private NIO() : base("NIO") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Cordoba Oro".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Cordoba Oro".</value>
        public static NIO Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Cordoba Oro".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Cordoba Oro".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Norwegian Krone".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class NOK : Currency
    {
        private static readonly NOK s_Currency = new NOK();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("NOK", 578) {
            EnglishName = @"Norwegian Krone",
            MinorUnits = 2
        };

        private NOK() : base("NOK") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Norwegian Krone".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Norwegian Krone".</value>
        public static NOK Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Norwegian Krone".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Norwegian Krone".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Nepalese Rupee".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class NPR : Currency
    {
        private static readonly NPR s_Currency = new NPR();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("NPR", 524) {
            EnglishName = @"Nepalese Rupee",
            MinorUnits = 2
        };

        private NPR() : base("NPR") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Nepalese Rupee".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Nepalese Rupee".</value>
        public static NPR Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Nepalese Rupee".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Nepalese Rupee".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "New Zealand Dollar".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class NZD : Currency
    {
        private static readonly NZD s_Currency = new NZD();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("NZD", 554) {
            EnglishName = @"New Zealand Dollar",
            MinorUnits = 2
        };

        private NZD() : base("NZD") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "New Zealand Dollar".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "New Zealand Dollar".</value>
        public static NZD Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "New Zealand Dollar".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "New Zealand Dollar".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Rial Omani".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class OMR : Currency
    {
        private static readonly OMR s_Currency = new OMR();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("OMR", 512) {
            EnglishName = @"Rial Omani",
            MinorUnits = 3
        };

        private OMR() : base("OMR") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Rial Omani".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Rial Omani".</value>
        public static OMR Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Rial Omani".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Rial Omani".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Balboa".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class PAB : Currency
    {
        private static readonly PAB s_Currency = new PAB();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("PAB", 590) {
            EnglishName = @"Balboa",
            MinorUnits = 2
        };

        private PAB() : base("PAB") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Balboa".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Balboa".</value>
        public static PAB Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Balboa".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Balboa".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Nuevo Sol".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class PEN : Currency
    {
        private static readonly PEN s_Currency = new PEN();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("PEN", 604) {
            EnglishName = @"Nuevo Sol",
            MinorUnits = 2
        };

        private PEN() : base("PEN") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Nuevo Sol".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Nuevo Sol".</value>
        public static PEN Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Nuevo Sol".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Nuevo Sol".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Kina".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class PGK : Currency
    {
        private static readonly PGK s_Currency = new PGK();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("PGK", 598) {
            EnglishName = @"Kina",
            MinorUnits = 2
        };

        private PGK() : base("PGK") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Kina".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Kina".</value>
        public static PGK Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Kina".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Kina".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Philippine Peso".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class PHP : Currency
    {
        private static readonly PHP s_Currency = new PHP();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("PHP", 608) {
            EnglishName = @"Philippine Peso",
            MinorUnits = 2
        };

        private PHP() : base("PHP") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Philippine Peso".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Philippine Peso".</value>
        public static PHP Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Philippine Peso".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Philippine Peso".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Pakistan Rupee".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class PKR : Currency
    {
        private static readonly PKR s_Currency = new PKR();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("PKR", 586) {
            EnglishName = @"Pakistan Rupee",
            MinorUnits = 2
        };

        private PKR() : base("PKR") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Pakistan Rupee".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Pakistan Rupee".</value>
        public static PKR Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Pakistan Rupee".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Pakistan Rupee".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Zloty".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class PLN : Currency
    {
        private static readonly PLN s_Currency = new PLN();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("PLN", 985) {
            EnglishName = @"Zloty",
            MinorUnits = 2
        };

        private PLN() : base("PLN") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Zloty".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Zloty".</value>
        public static PLN Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Zloty".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Zloty".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Guarani".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class PYG : Currency
    {
        private static readonly PYG s_Currency = new PYG();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("PYG", 600) {
            EnglishName = @"Guarani",
            MinorUnits = 0
        };

        private PYG() : base("PYG") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Guarani".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Guarani".</value>
        public static PYG Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Guarani".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Guarani".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Qatari Rial".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class QAR : Currency
    {
        private static readonly QAR s_Currency = new QAR();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("QAR", 634) {
            EnglishName = @"Qatari Rial",
            MinorUnits = 2
        };

        private QAR() : base("QAR") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Qatari Rial".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Qatari Rial".</value>
        public static QAR Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Qatari Rial".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Qatari Rial".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "New Romanian Leu".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class RON : Currency
    {
        private static readonly RON s_Currency = new RON();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("RON", 946) {
            EnglishName = @"New Romanian Leu",
            MinorUnits = 2
        };

        private RON() : base("RON") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "New Romanian Leu".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "New Romanian Leu".</value>
        public static RON Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "New Romanian Leu".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "New Romanian Leu".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Serbian Dinar".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class RSD : Currency
    {
        private static readonly RSD s_Currency = new RSD();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("RSD", 941) {
            EnglishName = @"Serbian Dinar",
            MinorUnits = 2
        };

        private RSD() : base("RSD") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Serbian Dinar".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Serbian Dinar".</value>
        public static RSD Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Serbian Dinar".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Serbian Dinar".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Russian Ruble".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class RUB : Currency
    {
        private static readonly RUB s_Currency = new RUB();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("RUB", 643) {
            EnglishName = @"Russian Ruble",
            MinorUnits = 2
        };

        private RUB() : base("RUB") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Russian Ruble".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Russian Ruble".</value>
        public static RUB Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Russian Ruble".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Russian Ruble".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Rwanda Franc".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class RWF : Currency
    {
        private static readonly RWF s_Currency = new RWF();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("RWF", 646) {
            EnglishName = @"Rwanda Franc",
            MinorUnits = 0
        };

        private RWF() : base("RWF") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Rwanda Franc".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Rwanda Franc".</value>
        public static RWF Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Rwanda Franc".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Rwanda Franc".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Saudi Riyal".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class SAR : Currency
    {
        private static readonly SAR s_Currency = new SAR();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("SAR", 682) {
            EnglishName = @"Saudi Riyal",
            MinorUnits = 2
        };

        private SAR() : base("SAR") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Saudi Riyal".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Saudi Riyal".</value>
        public static SAR Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Saudi Riyal".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Saudi Riyal".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Solomon Islands Dollar".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class SBD : Currency
    {
        private static readonly SBD s_Currency = new SBD();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("SBD", 90) {
            EnglishName = @"Solomon Islands Dollar",
            MinorUnits = 2
        };

        private SBD() : base("SBD") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Solomon Islands Dollar".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Solomon Islands Dollar".</value>
        public static SBD Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Solomon Islands Dollar".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Solomon Islands Dollar".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Seychelles Rupee".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class SCR : Currency
    {
        private static readonly SCR s_Currency = new SCR();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("SCR", 690) {
            EnglishName = @"Seychelles Rupee",
            MinorUnits = 2
        };

        private SCR() : base("SCR") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Seychelles Rupee".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Seychelles Rupee".</value>
        public static SCR Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Seychelles Rupee".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Seychelles Rupee".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Sudanese Pound".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class SDG : Currency
    {
        private static readonly SDG s_Currency = new SDG();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("SDG", 938) {
            EnglishName = @"Sudanese Pound",
            MinorUnits = 2
        };

        private SDG() : base("SDG") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Sudanese Pound".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Sudanese Pound".</value>
        public static SDG Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Sudanese Pound".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Sudanese Pound".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Swedish Krona".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class SEK : Currency
    {
        private static readonly SEK s_Currency = new SEK();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("SEK", 752) {
            EnglishName = @"Swedish Krona",
            MinorUnits = 2
        };

        private SEK() : base("SEK") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Swedish Krona".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Swedish Krona".</value>
        public static SEK Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Swedish Krona".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Swedish Krona".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Singapore Dollar".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class SGD : Currency
    {
        private static readonly SGD s_Currency = new SGD();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("SGD", 702) {
            EnglishName = @"Singapore Dollar",
            MinorUnits = 2
        };

        private SGD() : base("SGD") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Singapore Dollar".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Singapore Dollar".</value>
        public static SGD Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Singapore Dollar".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Singapore Dollar".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Saint Helena Pound".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class SHP : Currency
    {
        private static readonly SHP s_Currency = new SHP();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("SHP", 654) {
            EnglishName = @"Saint Helena Pound",
            MinorUnits = 2
        };

        private SHP() : base("SHP") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Saint Helena Pound".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Saint Helena Pound".</value>
        public static SHP Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Saint Helena Pound".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Saint Helena Pound".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Leone".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class SLL : Currency
    {
        private static readonly SLL s_Currency = new SLL();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("SLL", 694) {
            EnglishName = @"Leone",
            MinorUnits = 2
        };

        private SLL() : base("SLL") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Leone".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Leone".</value>
        public static SLL Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Leone".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Leone".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Somali Shilling".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class SOS : Currency
    {
        private static readonly SOS s_Currency = new SOS();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("SOS", 706) {
            EnglishName = @"Somali Shilling",
            MinorUnits = 2
        };

        private SOS() : base("SOS") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Somali Shilling".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Somali Shilling".</value>
        public static SOS Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Somali Shilling".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Somali Shilling".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Surinam Dollar".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class SRD : Currency
    {
        private static readonly SRD s_Currency = new SRD();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("SRD", 968) {
            EnglishName = @"Surinam Dollar",
            MinorUnits = 2
        };

        private SRD() : base("SRD") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Surinam Dollar".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Surinam Dollar".</value>
        public static SRD Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Surinam Dollar".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Surinam Dollar".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "South Sudanese Pound".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class SSP : Currency
    {
        private static readonly SSP s_Currency = new SSP();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("SSP", 728) {
            EnglishName = @"South Sudanese Pound",
            MinorUnits = 2
        };

        private SSP() : base("SSP") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "South Sudanese Pound".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "South Sudanese Pound".</value>
        public static SSP Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "South Sudanese Pound".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "South Sudanese Pound".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Dobra".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class STD : Currency
    {
        private static readonly STD s_Currency = new STD();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("STD", 678) {
            EnglishName = @"Dobra",
            MinorUnits = 2
        };

        private STD() : base("STD") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Dobra".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Dobra".</value>
        public static STD Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Dobra".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Dobra".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "El Salvador Colon".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class SVC : Currency
    {
        private static readonly SVC s_Currency = new SVC();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("SVC", 222) {
            EnglishName = @"El Salvador Colon",
            MinorUnits = 2
        };

        private SVC() : base("SVC") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "El Salvador Colon".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "El Salvador Colon".</value>
        public static SVC Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "El Salvador Colon".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "El Salvador Colon".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Syrian Pound".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class SYP : Currency
    {
        private static readonly SYP s_Currency = new SYP();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("SYP", 760) {
            EnglishName = @"Syrian Pound",
            MinorUnits = 2
        };

        private SYP() : base("SYP") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Syrian Pound".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Syrian Pound".</value>
        public static SYP Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Syrian Pound".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Syrian Pound".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Lilangeni".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class SZL : Currency
    {
        private static readonly SZL s_Currency = new SZL();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("SZL", 748) {
            EnglishName = @"Lilangeni",
            MinorUnits = 2
        };

        private SZL() : base("SZL") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Lilangeni".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Lilangeni".</value>
        public static SZL Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Lilangeni".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Lilangeni".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Baht".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class THB : Currency
    {
        private static readonly THB s_Currency = new THB();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("THB", 764) {
            EnglishName = @"Baht",
            MinorUnits = 2
        };

        private THB() : base("THB") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Baht".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Baht".</value>
        public static THB Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Baht".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Baht".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Somoni".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class TJS : Currency
    {
        private static readonly TJS s_Currency = new TJS();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("TJS", 972) {
            EnglishName = @"Somoni",
            MinorUnits = 2
        };

        private TJS() : base("TJS") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Somoni".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Somoni".</value>
        public static TJS Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Somoni".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Somoni".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Turkmenistan New Manat".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class TMT : Currency
    {
        private static readonly TMT s_Currency = new TMT();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("TMT", 934) {
            EnglishName = @"Turkmenistan New Manat",
            MinorUnits = 2
        };

        private TMT() : base("TMT") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Turkmenistan New Manat".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Turkmenistan New Manat".</value>
        public static TMT Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Turkmenistan New Manat".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Turkmenistan New Manat".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Tunisian Dinar".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class TND : Currency
    {
        private static readonly TND s_Currency = new TND();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("TND", 788) {
            EnglishName = @"Tunisian Dinar",
            MinorUnits = 3
        };

        private TND() : base("TND") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Tunisian Dinar".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Tunisian Dinar".</value>
        public static TND Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Tunisian Dinar".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Tunisian Dinar".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Pa’anga".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class TOP : Currency
    {
        private static readonly TOP s_Currency = new TOP();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("TOP", 776) {
            EnglishName = @"Pa’anga",
            MinorUnits = 2
        };

        private TOP() : base("TOP") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Pa’anga".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Pa’anga".</value>
        public static TOP Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Pa’anga".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Pa’anga".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Turkish Lira".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class TRY : Currency
    {
        private static readonly TRY s_Currency = new TRY();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("TRY", 949) {
            EnglishName = @"Turkish Lira",
            MinorUnits = 2
        };

        private TRY() : base("TRY") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Turkish Lira".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Turkish Lira".</value>
        public static TRY Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Turkish Lira".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Turkish Lira".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Trinidad and Tobago Dollar".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class TTD : Currency
    {
        private static readonly TTD s_Currency = new TTD();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("TTD", 780) {
            EnglishName = @"Trinidad and Tobago Dollar",
            MinorUnits = 2
        };

        private TTD() : base("TTD") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Trinidad and Tobago Dollar".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Trinidad and Tobago Dollar".</value>
        public static TTD Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Trinidad and Tobago Dollar".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Trinidad and Tobago Dollar".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "New Taiwan Dollar".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class TWD : Currency
    {
        private static readonly TWD s_Currency = new TWD();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("TWD", 901) {
            EnglishName = @"New Taiwan Dollar",
            MinorUnits = 2
        };

        private TWD() : base("TWD") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "New Taiwan Dollar".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "New Taiwan Dollar".</value>
        public static TWD Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "New Taiwan Dollar".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "New Taiwan Dollar".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Tanzanian Shilling".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class TZS : Currency
    {
        private static readonly TZS s_Currency = new TZS();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("TZS", 834) {
            EnglishName = @"Tanzanian Shilling",
            MinorUnits = 2
        };

        private TZS() : base("TZS") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Tanzanian Shilling".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Tanzanian Shilling".</value>
        public static TZS Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Tanzanian Shilling".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Tanzanian Shilling".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Hryvnia".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class UAH : Currency
    {
        private static readonly UAH s_Currency = new UAH();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("UAH", 980) {
            EnglishName = @"Hryvnia",
            MinorUnits = 2
        };

        private UAH() : base("UAH") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Hryvnia".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Hryvnia".</value>
        public static UAH Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Hryvnia".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Hryvnia".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Uganda Shilling".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class UGX : Currency
    {
        private static readonly UGX s_Currency = new UGX();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("UGX", 800) {
            EnglishName = @"Uganda Shilling",
            MinorUnits = 0
        };

        private UGX() : base("UGX") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Uganda Shilling".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Uganda Shilling".</value>
        public static UGX Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Uganda Shilling".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Uganda Shilling".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "US Dollar".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class USD : Currency
    {
        private static readonly USD s_Currency = new USD();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("USD", 840) {
            EnglishName = @"US Dollar",
            MinorUnits = 2
        };

        private USD() : base("USD") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "US Dollar".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "US Dollar".</value>
        public static USD Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "US Dollar".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "US Dollar".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "US Dollar (Next day)".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class USN : Currency
    {
        private static readonly USN s_Currency = new USN();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("USN", 997) {
            EnglishName = @"US Dollar (Next day)",
            IsFund = true,
            MinorUnits = 2
        };

        private USN() : base("USN") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "US Dollar (Next day)".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "US Dollar (Next day)".</value>
        public static USN Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "US Dollar (Next day)".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "US Dollar (Next day)".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Uruguay Peso en Unidades Indexadas (URUIURUI)".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class UYI : Currency
    {
        private static readonly UYI s_Currency = new UYI();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("UYI", 940) {
            EnglishName = @"Uruguay Peso en Unidades Indexadas (URUIURUI)",
            IsFund = true,
            MinorUnits = 0
        };

        private UYI() : base("UYI") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Uruguay Peso en Unidades Indexadas (URUIURUI)".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Uruguay Peso en Unidades Indexadas (URUIURUI)".</value>
        public static UYI Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Uruguay Peso en Unidades Indexadas (URUIURUI)".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Uruguay Peso en Unidades Indexadas (URUIURUI)".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Peso Uruguayo".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class UYU : Currency
    {
        private static readonly UYU s_Currency = new UYU();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("UYU", 858) {
            EnglishName = @"Peso Uruguayo",
            MinorUnits = 2
        };

        private UYU() : base("UYU") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Peso Uruguayo".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Peso Uruguayo".</value>
        public static UYU Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Peso Uruguayo".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Peso Uruguayo".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Uzbekistan Sum".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class UZS : Currency
    {
        private static readonly UZS s_Currency = new UZS();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("UZS", 860) {
            EnglishName = @"Uzbekistan Sum",
            MinorUnits = 2
        };

        private UZS() : base("UZS") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Uzbekistan Sum".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Uzbekistan Sum".</value>
        public static UZS Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Uzbekistan Sum".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Uzbekistan Sum".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Bolivar".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class VEF : Currency
    {
        private static readonly VEF s_Currency = new VEF();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("VEF", 937) {
            EnglishName = @"Bolivar",
            MinorUnits = 2
        };

        private VEF() : base("VEF") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Bolivar".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Bolivar".</value>
        public static VEF Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Bolivar".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Bolivar".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Dong".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class VND : Currency
    {
        private static readonly VND s_Currency = new VND();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("VND", 704) {
            EnglishName = @"Dong",
            MinorUnits = 0
        };

        private VND() : base("VND") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Dong".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Dong".</value>
        public static VND Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Dong".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Dong".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Vatu".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class VUV : Currency
    {
        private static readonly VUV s_Currency = new VUV();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("VUV", 548) {
            EnglishName = @"Vatu",
            MinorUnits = 0
        };

        private VUV() : base("VUV") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Vatu".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Vatu".</value>
        public static VUV Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Vatu".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Vatu".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Tala".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class WST : Currency
    {
        private static readonly WST s_Currency = new WST();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("WST", 882) {
            EnglishName = @"Tala",
            MinorUnits = 2
        };

        private WST() : base("WST") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Tala".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Tala".</value>
        public static WST Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Tala".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Tala".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "CFA Franc BEAC".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class XAF : Currency
    {
        private static readonly XAF s_Currency = new XAF();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("XAF", 950) {
            EnglishName = @"CFA Franc BEAC",
            MinorUnits = 0
        };

        private XAF() : base("XAF") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "CFA Franc BEAC".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "CFA Franc BEAC".</value>
        public static XAF Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "CFA Franc BEAC".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "CFA Franc BEAC".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Silver".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class XAG : Currency
    {
        private static readonly XAG s_Currency = new XAG();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("XAG", 961) {
            EnglishName = @"Silver",
        };

        private XAG() : base("XAG") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Silver".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Silver".</value>
        public static XAG Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Silver".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Silver".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Gold".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class XAU : Currency
    {
        private static readonly XAU s_Currency = new XAU();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("XAU", 959) {
            EnglishName = @"Gold",
        };

        private XAU() : base("XAU") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Gold".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Gold".</value>
        public static XAU Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Gold".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Gold".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Bond Markets Unit European Composite Unit (EURCO)".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class XBA : Currency
    {
        private static readonly XBA s_Currency = new XBA();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("XBA", 955) {
            EnglishName = @"Bond Markets Unit European Composite Unit (EURCO)",
        };

        private XBA() : base("XBA") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Bond Markets Unit European Composite Unit (EURCO)".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Bond Markets Unit European Composite Unit (EURCO)".</value>
        public static XBA Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Bond Markets Unit European Composite Unit (EURCO)".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Bond Markets Unit European Composite Unit (EURCO)".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Bond Markets Unit European Monetary Unit (E.M.U.-6)".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class XBB : Currency
    {
        private static readonly XBB s_Currency = new XBB();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("XBB", 956) {
            EnglishName = @"Bond Markets Unit European Monetary Unit (E.M.U.-6)",
        };

        private XBB() : base("XBB") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Bond Markets Unit European Monetary Unit (E.M.U.-6)".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Bond Markets Unit European Monetary Unit (E.M.U.-6)".</value>
        public static XBB Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Bond Markets Unit European Monetary Unit (E.M.U.-6)".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Bond Markets Unit European Monetary Unit (E.M.U.-6)".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Bond Markets Unit European Unit of Account 9 (E.U.A.-9)".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class XBC : Currency
    {
        private static readonly XBC s_Currency = new XBC();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("XBC", 957) {
            EnglishName = @"Bond Markets Unit European Unit of Account 9 (E.U.A.-9)",
        };

        private XBC() : base("XBC") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Bond Markets Unit European Unit of Account 9 (E.U.A.-9)".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Bond Markets Unit European Unit of Account 9 (E.U.A.-9)".</value>
        public static XBC Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Bond Markets Unit European Unit of Account 9 (E.U.A.-9)".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Bond Markets Unit European Unit of Account 9 (E.U.A.-9)".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Bond Markets Unit European Unit of Account 17 (E.U.A.-17)".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class XBD : Currency
    {
        private static readonly XBD s_Currency = new XBD();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("XBD", 958) {
            EnglishName = @"Bond Markets Unit European Unit of Account 17 (E.U.A.-17)",
        };

        private XBD() : base("XBD") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Bond Markets Unit European Unit of Account 17 (E.U.A.-17)".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Bond Markets Unit European Unit of Account 17 (E.U.A.-17)".</value>
        public static XBD Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Bond Markets Unit European Unit of Account 17 (E.U.A.-17)".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Bond Markets Unit European Unit of Account 17 (E.U.A.-17)".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "East Caribbean Dollar".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class XCD : Currency
    {
        private static readonly XCD s_Currency = new XCD();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("XCD", 951) {
            EnglishName = @"East Caribbean Dollar",
            MinorUnits = 2
        };

        private XCD() : base("XCD") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "East Caribbean Dollar".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "East Caribbean Dollar".</value>
        public static XCD Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "East Caribbean Dollar".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "East Caribbean Dollar".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "SDR (Special Drawing Right)".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class XDR : Currency
    {
        private static readonly XDR s_Currency = new XDR();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("XDR", 960) {
            EnglishName = @"SDR (Special Drawing Right)",
        };

        private XDR() : base("XDR") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "SDR (Special Drawing Right)".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "SDR (Special Drawing Right)".</value>
        public static XDR Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "SDR (Special Drawing Right)".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "SDR (Special Drawing Right)".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "CFA Franc BCEAO".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class XOF : Currency
    {
        private static readonly XOF s_Currency = new XOF();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("XOF", 952) {
            EnglishName = @"CFA Franc BCEAO",
            MinorUnits = 0
        };

        private XOF() : base("XOF") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "CFA Franc BCEAO".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "CFA Franc BCEAO".</value>
        public static XOF Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "CFA Franc BCEAO".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "CFA Franc BCEAO".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Palladium".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class XPD : Currency
    {
        private static readonly XPD s_Currency = new XPD();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("XPD", 964) {
            EnglishName = @"Palladium",
        };

        private XPD() : base("XPD") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Palladium".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Palladium".</value>
        public static XPD Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Palladium".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Palladium".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "CFP Franc".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class XPF : Currency
    {
        private static readonly XPF s_Currency = new XPF();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("XPF", 953) {
            EnglishName = @"CFP Franc",
            MinorUnits = 0
        };

        private XPF() : base("XPF") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "CFP Franc".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "CFP Franc".</value>
        public static XPF Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "CFP Franc".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "CFP Franc".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Platinum".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class XPT : Currency
    {
        private static readonly XPT s_Currency = new XPT();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("XPT", 962) {
            EnglishName = @"Platinum",
        };

        private XPT() : base("XPT") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Platinum".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Platinum".</value>
        public static XPT Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Platinum".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Platinum".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Sucre".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class XSU : Currency
    {
        private static readonly XSU s_Currency = new XSU();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("XSU", 994) {
            EnglishName = @"Sucre",
        };

        private XSU() : base("XSU") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Sucre".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Sucre".</value>
        public static XSU Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Sucre".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Sucre".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Codes specifically reserved for testing purposes".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class XTS : Currency
    {
        private static readonly XTS s_Currency = new XTS();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("XTS", 963) {
            EnglishName = @"Codes specifically reserved for testing purposes",
        };

        private XTS() : base("XTS") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Codes specifically reserved for testing purposes".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Codes specifically reserved for testing purposes".</value>
        public static XTS Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Codes specifically reserved for testing purposes".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Codes specifically reserved for testing purposes".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "ADB Unit of Account".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class XUA : Currency
    {
        private static readonly XUA s_Currency = new XUA();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("XUA", 965) {
            EnglishName = @"ADB Unit of Account",
        };

        private XUA() : base("XUA") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "ADB Unit of Account".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "ADB Unit of Account".</value>
        public static XUA Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "ADB Unit of Account".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "ADB Unit of Account".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "The codes assigned for transactions where no currency is involved".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class XXX : Currency
    {
        private static readonly XXX s_Currency = new XXX();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("XXX", 999) {
            EnglishName = @"The codes assigned for transactions where no currency is involved",
        };

        private XXX() : base("XXX") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "The codes assigned for transactions where no currency is involved".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "The codes assigned for transactions where no currency is involved".</value>
        public static XXX Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "The codes assigned for transactions where no currency is involved".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "The codes assigned for transactions where no currency is involved".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Yemeni Rial".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class YER : Currency
    {
        private static readonly YER s_Currency = new YER();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("YER", 886) {
            EnglishName = @"Yemeni Rial",
            MinorUnits = 2
        };

        private YER() : base("YER") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Yemeni Rial".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Yemeni Rial".</value>
        public static YER Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Yemeni Rial".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Yemeni Rial".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Rand".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class ZAR : Currency
    {
        private static readonly ZAR s_Currency = new ZAR();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("ZAR", 710) {
            EnglishName = @"Rand",
            MinorUnits = 2
        };

        private ZAR() : base("ZAR") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Rand".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Rand".</value>
        public static ZAR Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Rand".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Rand".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Zambian Kwacha".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class ZMW : Currency
    {
        private static readonly ZMW s_Currency = new ZMW();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("ZMW", 967) {
            EnglishName = @"Zambian Kwacha",
            MinorUnits = 2
        };

        private ZMW() : base("ZMW") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Zambian Kwacha".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Zambian Kwacha".</value>
        public static ZMW Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Zambian Kwacha".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Zambian Kwacha".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

    /// <summary>
    /// Represents the currency unit for the "Zimbabwe Dollar".
    /// </summary>
    [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly",
        Justification = "[Intentionally] Exceptionally we prefer to preserve the currency code casing.")]
    public sealed class ZWL : Currency
    {
        private static readonly ZWL s_Currency = new ZWL();

        private static readonly CurrencyInfo s_CurrencyInfo = new CurrencyInfo("ZWL", 932) {
            EnglishName = @"Zimbabwe Dollar",
            MinorUnits = 2
        };

        private ZWL() : base("ZWL") { }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="Currency" /> class for the "Zimbabwe Dollar".
        /// </summary>
        /// <value>The unique instance of the <see cref="Currency" /> class for the "Zimbabwe Dollar".</value>
        public static ZWL Currency
        { 
            get 
            {
                Contract.Ensures(Contract.Result<Currency>() != null);
                return s_Currency;
            }
        }
        
        /// <summary>
        /// Gets the unique instance of the <see cref="CurrencyInfo" /> class for the "Zimbabwe Dollar".
        /// </summary>
        /// <value>The unique instance of the <see cref="CurrencyInfo" /> class for the "Zimbabwe Dollar".</value>
        public static CurrencyInfo CurrencyInfo
        { 
            get 
            {
                Contract.Ensures(Contract.Result<CurrencyInfo>() != null);
                return s_CurrencyInfo;
            }
        }
    }

}
