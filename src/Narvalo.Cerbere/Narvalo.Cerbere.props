<?xml version="1.0" encoding="utf-8" ?>
<Project ToolsVersion="14.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <!-- CodeContracts configuration -->
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'CodeContracts|AnyCPU' ">
    <DebugSymbols>false</DebugSymbols>
    <DebugType>none</DebugType>
    <Optimize>false</Optimize>
    <TreatWarningsAsErrors>true</TreatWarningsAsErrors>
    <!-- WARNING: Do not add the CODE_ANALYSIS symbol. Inside VS, it would cause
         FxCop to run automatically on build but Code Contracts and Code Analysis
         don't play well together. Anyway, the build is already slow enough in this
         confguration. Otherwise, note that the Code Contracts rewriter will
         define the CODE_ANALYSIS symbol. -->
    <DefineConstants>TRACE;CONTRACTS_FULL</DefineConstants>
    <CheckForOverflowUnderflow>false</CheckForOverflowUnderflow>
  </PropertyGroup>

  <!-- Code Analysis -->
  <PropertyGroup>
    <CodeAnalysisRuleSet Condition=" '$(Configuration)' == 'CodeContracts' ">MinimumRecommendedRules.ruleset</CodeAnalysisRuleSet>
  </PropertyGroup>

  <!-- Code Contracts -->
  <!--
    For a complete list of available options, see
      %ProgramFiles%\Microsoft\Contracts\MsBuild\v$(VisualStudioVersion)\Microsoft.CodeContractAnalysis.targets
      %ProgramFiles%\Microsoft\Contracts\MsBuild\v$(VisualStudioVersion)\Microsoft.CodeContracts.targets

    We do not really enforce any policy for Code Contracts as they are not
    currently used by all projects. When enabling Code Contracts on a project,
    you should also add the following lines to {AssemblyName}.props:
      <PropertyGroup Condition=" '$(BuildingInsideVisualStudio)' != 'true' ">
        <CodeContractsReferenceAssembly>Build</CodeContractsReferenceAssembly>
      </PropertyGroup>
    On CodeContracts Build, configuration is exclusively done inside VS.
    Even so, let's set some reasonable defaults.
  -->
  <PropertyGroup>
    <!-- Use "Custom Parameter Validation". -->
    <CodeContractsAssemblyMode>0</CodeContractsAssemblyMode>
    <!-- Only meaningful inside VS, anyway I find the result confusing. -->
    <CodeContractsShowSquigglies>false</CodeContractsShowSquigglies>
    <!-- Extra CCChecker options. -->
    <CodeContractsExtraAnalysisOptions>-outputwarnmasks -show unreached</CodeContractsExtraAnalysisOptions>

    <!-- For command-line builds the following settings are reversed. -->
    <CodeContractsFailBuildOnWarnings>false</CodeContractsFailBuildOnWarnings>
    <CodeContractsRunInBackground>true</CodeContractsRunInBackground>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(BuildingInsideVisualStudio)' != 'true' ">
    <CodeContractsReferenceAssembly>Build</CodeContractsReferenceAssembly>
    <CodeContractsEmitXMLDocs>true</CodeContractsEmitXMLDocs>
  </PropertyGroup>
</Project>