<#+

public partial class MonadTemplate
{
    public void EmitKleisliExtensions(bool haslinq)
    {
#>
    // Provides extension methods for Func<T> in the Kleisli category.
    public static partial class Kleisli
    {
<#+ if (!HasTypeConstraints) { #>
        public static <#= Name #><IEnumerable<TResult><#= SuffixT #>> InvokeForEach<TSource, TResult<#= SuffixT #>>(
            this Func<TSource, <#= Name #><TResult<#= SuffixT #>>> @this,
            IEnumerable<TSource> seq)
<#+ if (haslinq) { #>
            => seq.SelectWith(@this);
<#+ } else { #>
            => seq.Select(@this).Collect();
<#+ } #>

<#+ } // T4: End of !HasTypeConstraints. #>

        public static <#= Name #><TResult<#= SuffixT #>> InvokeWith<TSource, TResult<#= SuffixT #>>(
            this Func<TSource, <#= Name #><TResult<#= SuffixT #>>> @this,
            <#= Name #><TSource<#= SuffixT #>> value)
            <#+ WriteTypeConstraints("TSource", "TResult"); #>
        {
            <#+ WriteNotNull("value"); #>
            return value.Bind(@this);
        }

        public static Func<TSource, <#= Name #><TResult<#= SuffixT #>>> Compose<TSource, TMiddle, TResult<#= SuffixT #>>(
            this Func<TSource, <#= Name #><TMiddle<#= SuffixT #>>> first,
            Func<TMiddle, <#= Name #><TResult<#= SuffixT #>>> second)
            <#+ WriteTypeConstraints("TSource", "TMiddle", "TResult"); #>
        {
            Require.NotNull(first, nameof(first));
            return arg => first(arg).Bind(second);
        }

        public static Func<TSource, <#= Name #><TResult<#= SuffixT #>>> ComposeBack<TSource, TMiddle, TResult<#= SuffixT #>>(
            this Func<TMiddle, <#= Name #><TResult<#= SuffixT #>>> first,
            Func<TSource, <#= Name #><TMiddle<#= SuffixT #>>> second)
            <#+ WriteTypeConstraints("TSource", "TMiddle", "TResult"); #>
        {
            Require.NotNull(second, nameof(second));
            return arg => second(arg).Bind(first);
        }
    } // End of Kleisli - T4: EmitKleisliExtensions().
<#+
    } // T4: End of EmitKleisliExtensions().
} // T4: End of MonadTemplate.

#>