<#+

public partial class MonadTemplate
{
    protected void EmitComonadCore()
    {
#>
    // Implements core Comonad methods.
    public static partial class <#= Name #>
    {
        /// <remarks>
        /// Named <c>extract</c> in Haskell parlance.
        /// </remarks>
        public static T Extract<T>(<#= Name #><T> monad)
            <#+ WriteTypeConstraints("T"); #>
        {
<#+ if (IsNullable) { #>
            Expect.NotNull(monad);
<#+ } #>

            return <#= Name #><T>.ε(monad);
        }

        /// <remarks>
        /// Named <c>duplicate</c> in Haskell parlance.
        /// </remarks>
        public static <#= Name #><<#= Name #><T>> Duplicate<T>(<#= Name #><T> monad)
            <#+ WriteTypeConstraints("T"); #>
        {
<#+ if (IsNullable) { #>
            Ensures(Result<<#= Name #><<#= Name #><T>>>() != null);
<#+ } #>

            return <#= Name #><T>.δ(monad);
        }
    } // End of <#= Name #>.
<#+
    } // T4: End of EmitCoreComonad().
} // T4: End of MonadTemplate.

#>