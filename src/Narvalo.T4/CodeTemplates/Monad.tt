<#@ assembly name="$(T4NarvaloLibrary)" #>
<#@ import namespace="Microsoft.VisualStudio.TextTemplating" #>
<#@ import namespace="Narvalo.T4" #>
<#@ include file="Monad\EmitMonadCore.tt" #>
<#@ include file="Monad\EmitMonadExtensions.tt" #>
<#@ include file="Monad\EmitKleisliExtensions.tt" #>
<#@ include file="Monad\EmitMonadEnumerableExtensions.tt" #>
<#@ include file="Monad\EmitMonadEnumerableInternalExtensions.tt" #>
<#@ include file="Monad\EmitEnumerableExtensions.tt" #>
<#@ include file="Monad\EmitEnumerableInternalExtensions.tt" #>
<#@ include file="Monad\EmitComonadCore.tt" #><#+

// WARNING: This is only a proof of concept.
// This file depends on Narvalo.Cerbere & Narvalo.Fx packages for:
// - The classes Require, Demand, Expect & Warrant in the Narvalo namespace.
// - The class Unit in the Narvalo.Fx namespace.
// - The LINQ extension methods EmptyIfNull(), Append() & Prepend().
// The generated files are free of CA warnings except for CA1006:DoNotNestGenericTypesInMemberSignatures.

public abstract partial class MonadTemplate : _MonadTemplate
{
    protected MonadTemplate(TextTransformation parent) : base(parent) { }

    protected override void WriteContent()
    {
        EmitMonad();
        WriteLine();

        EmitLinq();
    }

    /// <summary>
    /// Generates a Monad.
    /// </summary>
    public void EmitMonadLight()
    {
#>

<#+ if (!Namespace.StartsWith("Narvalo.")) { #>
using global::Narvalo;
using global::Narvalo.Fx;
<#+ } #>

namespace <#= Namespace #>
{
    using System;
    using System.Collections.Generic;
<#+ if (!SuppressMessage) { #>
    using System.Diagnostics.CodeAnalysis;
<#+ } #>
    using System.Linq;

<#+
    EmitMonadCore();
    WriteLine();

    EmitMonadExtensions();
    WriteLine();

    EmitKleisliExtensions(false);
#>
}
<#+
    } // T4: End of EmitMonad().

    /// <summary>
    /// Generates a Monad.
    /// </summary>
    public void EmitMonad()
    {
#>

<#+ if (!Namespace.StartsWith("Narvalo.")) { #>
using global::Narvalo;
using global::Narvalo.Fx;
<#+ } #>

namespace <#= Namespace #>
{
    using System;
    using System.Collections.Generic;
<#+ if (!SuppressMessage) { #>
    using System.Diagnostics.CodeAnalysis;
<#+ } #>
    using System.Linq;

    using <#= Namespace #>.Linq;

<#+
    EmitMonadCore();
    WriteLine();

    EmitMonadExtensions();
    WriteLine();

    EmitKleisliExtensions(true);
#>
}
<#+
    } // T4: End of EmitMonad().

    /// <summary>
    /// Generates a Comonad.
    /// </summary>
    public void EmitComonad()
    {
#>

<#+ if (!Namespace.StartsWith("Narvalo.")) { #>
using global::Narvalo;
using global::Narvalo.Fx;
<#+ } #>

namespace <#= Namespace #>
{
<#+ EmitComonadCore(); #>
}
<#+
    } // T4: End of EmitComonad().

    /// <summary>
    /// Generates the LINQ extensions.
    /// </summary>
    public void EmitLinq()
    {
#>
namespace <#= Namespace #>
{
    using System.Collections.Generic;

    using <#= Namespace #>.Internal;

<#+ EmitMonadEnumerableExtensions(); #>
}

namespace <#= Namespace #>.Linq
{
    using System;
    using System.Collections.Generic;

    using <#= Namespace #>;
    using <#= Namespace #>.Internal;

<#+ EmitEnumerableExtensions(); #>
}

namespace <#= Namespace #>.Internal
{
    using System;
    using System.Collections.Generic;
<#+ if (!SuppressMessage) { #>
    using System.Diagnostics.CodeAnalysis;
<#+ } #>
    using System.Linq;

    using <#= Namespace #>.Linq;

<#+
    EmitMonadEnumerableInternalExtensions();
    WriteLine();

    EmitEnumerableInternalExtensions();
#>
}
<#+
    } // T4: End of EmitLinq().
} // T4: End of MonadTemplate.

#>
