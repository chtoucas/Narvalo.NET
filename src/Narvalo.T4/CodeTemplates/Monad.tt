<#@ assembly name="$(T4NarvaloLibrary)" #>
<#@ import namespace="Microsoft.VisualStudio.TextTemplating" #>
<#@ import namespace="Narvalo.T4" #>
<#@ include file="Monad\EmitMethods.tt" #>
<#@ include file="Monad\EmitHelpers.tt" #>
<#@ include file="Monad\EmitExtensions.tt" #>
<#@ include file="Monad\EmitKleisli.tt" #>
<#@ include file="Monad\EmitEnumerableExtensions.tt" #>
<#@ include file="Monad\EmitEnumerableInternal.tt" #>
<#@ include file="Monad\EmitLinqCore.tt" #>
<#@ include file="Monad\EmitLinqInternal.tt" #>
<#@ include file="Monad\EmitComonadCore.tt" #><#+

// WARNING: This is only a proof of concept.
// This template depends on the packages Narvalo.Cerbere & Narvalo.Fx packages:
// - The classes Require & Demand in the Narvalo namespace.
// - The class Unit in the Narvalo.Fx namespace.
// The generated files are free of CA warnings except for CA1006:DoNotNestGenericTypesInMemberSignatures.

public abstract partial class MonadTemplate : _MonadTemplate
{
    protected MonadTemplate(TextTransformation parent) : base(parent) { }

    protected override void WriteContent()
    {
        EmitMonad();
    }

    /// <summary>
    /// Generates a Monad.
    /// </summary>
    public void EmitMonad()
    {
#>
<#+ if (!Namespace.StartsWith("Narvalo.")) { #>
using global::Narvalo;
using global::Narvalo.Fx;

<#+ } #>
namespace <#= Namespace #>
{
    using System;
    using System.Collections.Generic;
    using System.Linq;

    using <#= Namespace #>.Internal;
<#+ if (EmitLinq) { #>
    using <#= Namespace #>.Linq;
<#+ } #>
<#+ if (!EmitLinq) { #>
    using Narvalo.Fx.Linq;
<#+ } #>

<#+
    WriteLine();
    EmitHelpers();

    WriteLine();
    EmitExtensions();

    WriteLine();
    EmitKleisli();

    WriteLine();
    EmitEnumerableExtensions();
#>
}

namespace <#= Namespace #>.Internal
{
    using System.Collections.Generic;
<#+ if (!SuppressMessage) { #>
    using System.Diagnostics.CodeAnalysis;
<#+ } #>
    using System.Linq;

    using Narvalo.Fx.Linq;

<#+ EmitEnumerableInternal(); #>
}
<#+
        if (EmitLinq) {
            WriteLine();

            EmitLinqExtensions();
        }
    } // T4: End of EmitMonad().

    /// <summary>
    /// Generates a Comonad.
    /// </summary>
    public void EmitComonad()
    {
#>

<#+ if (!Namespace.StartsWith("Narvalo.")) { #>
using global::Narvalo;
using global::Narvalo.Fx;
<#+ } #>

namespace <#= Namespace #>
{
<#+ EmitComonadCore(); #>
}
<#+
    } // T4: End of EmitComonad().

    /// <summary>
    /// Generates the LINQ extensions.
    /// </summary>
    public void EmitLinqExtensions()
    {
#>
namespace <#= Namespace #>.Linq
{
    using System;
    using System.Collections.Generic;

    using <#= Namespace #>;
    using <#= Namespace #>.Internal;

<#+ EmitLinqCore(); #>
}

namespace <#= Namespace #>.Internal
{
    using System;
    using System.Collections.Generic;
<#+ if (!SuppressMessage) { #>
    using System.Diagnostics.CodeAnalysis;
<#+ } #>
    using System.Linq;

<#+ EmitLinqInternal(); #>
}
<#+
    } // T4: End of EmitLinqExtensions().
} // T4: End of MonadTemplate.

#>
