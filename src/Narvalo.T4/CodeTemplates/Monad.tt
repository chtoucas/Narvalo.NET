<#@ assembly name="$(T4NarvaloLibrary)" #>
<#@ import namespace="Microsoft.VisualStudio.TextTemplating" #>
<#@ import namespace="Narvalo.T4" #>
<#@ include file="Monad\EmitMonadCore.tt" #>
<#@ include file="Monad\EmitMonadExtensions.tt" #>
<#@ include file="Monad\EmitMonadExtraExtensions.tt" #>
<#@ include file="Monad\EmitKleisliExtensions.tt" #>
<#@ include file="Monad\EmitMonadEnumerableExtensions.tt" #>
<#@ include file="Monad\EmitMonadEnumerableInternalExtensions.tt" #>
<#@ include file="Monad\EmitEnumerableExtensions.tt" #>
<#@ include file="Monad\EmitEnumerableInternalExtensions.tt" #>
<#@ include file="Monad\EmitComonadCore.tt" #><#+

// WARNING: This is only a proof of concept.
// This file depends on Narvalo.Cerbere & Narvalo.Fx packages for four things:
// - the classes Acknowledge, Assume and Require in the Narvalo namespace.
// - the Unit class in the Narvalo.Fx namespace; but you can define your own: see UnitFullName.
// The generated files are free of CA warnings except for CA1006:DoNotNestGenericTypesInMemberSignatures.

// Remove this:
// If the monad does have a zero, we do expect "Bind" & "η" to never return null but the zero.
// If the monad does not have a zero, we do not have any expectation on the return value of Bind.

public abstract partial class MonadTemplate : _MonadTemplate
{
    protected MonadTemplate(TextTransformation parent) : base(parent) { }

    // EmitMonad -----------------------------------------------------------------------------------

    /// <summary>
    /// Generates a Monad.
    /// </summary>
    public void EmitMonad()
    {
#>
namespace <#= Namespace #>
{
    using System;
    using System.Collections.Generic;
    using System.Diagnostics.Contracts;
    using System.Linq;

    using global::Narvalo;

<#+
    EmitMonadCore();
    WriteLine();

    EmitMonadExtensions();
    WriteLine();

    EmitMonadExtraExtensions();
    WriteLine();

    EmitKleisliExtensions();
#>
}
<#+
    } // T4: End of EmitMonad().

    // EmitComonad ---------------------------------------------------------------------------------

    /// <summary>
    /// Generates a Comonad.
    /// </summary>
    public void EmitComonad()
    {
#>
namespace <#= Namespace #>
{
    using System.Diagnostics.Contracts;

<#+ EmitComonadCore(); #>
}
<#+
    } // T4: End of EmitComonad().

    // EmitLinq ------------------------------------------------------------------------------------

    /// <summary>
    /// Generates the LINQ extensions.
    /// </summary>
    public void EmitLinq()
    {
#>
namespace <#= Namespace #>
{
    using System.Collections.Generic;
    using System.Diagnostics.Contracts;

    using <#= Namespace #>.Internal;

<#+ EmitMonadEnumerableExtensions(); #>
}

namespace <#= Namespace #>.Advanced
{
    using System;
    using System.Collections.Generic;
    using System.Diagnostics.Contracts;

    using <#= Namespace #>;
    using <#= Namespace #>.Internal;

<#+ EmitEnumerableExtensions(); #>
}

namespace <#= Namespace #>.Internal
{
    using System;
    using System.Collections.Generic;
    using System.Diagnostics.CodeAnalysis;
    using System.Diagnostics.Contracts;
    using System.Linq;

    using global::Narvalo;
    using global::Narvalo.Fx; // Required for EmptyIfNull().
<#+ if (Namespace != "Narvalo.Fx") { #>
    using <#= Namespace #>;
<#+ } #>
    using <#= Namespace #>.Advanced;

<#+
    EmitMonadEnumerableInternalExtensions();
    WriteLine();

    EmitEnumerableInternalExtensions();
#>
}
<#+
    } // T4: End of EmitLinq().
} // T4: End of MonadTemplate.

#>
